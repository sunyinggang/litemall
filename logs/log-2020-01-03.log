2020-01-03 09:46:30,422 INFO [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 50] Starting Application on LAPTOP-1DJL8JUI with PID 19384 (D:\MyCode\Java\litemall\litemall-all\target\classes started by 迎港 in D:\MyCode\Java\litemall)
2020-01-03 09:46:30,476 DEBUG [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 53] Running with Spring Boot v2.1.5.RELEASE, Spring v5.1.7.RELEASE
2020-01-03 09:46:30,476 INFO [restartedMain] org.linlinjava.litemall.Application [SpringApplication.java : 679] The following profiles are active: db,core,admin,wx
2020-01-03 09:46:49,168 ERROR [restartedMain] c.alibaba.druid.pool.DruidDataSource [DruidDataSource.java : 872] init datasource error, url: jdbc:mysql://localhost:3306/iitemmall?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&verifyServerCertificate=false&useSSL=false
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:861)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1903)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1846)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1500)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:496)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:636)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:180)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:394)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:366)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973.realm(<generated>)
	at org.linlinjava.litemall.admin.config.ShiroConfig.defaultWebSecurityManager(ShiroConfig.java:55)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973.CGLIB$defaultWebSecurityManager$3(<generated>)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973$$FastClassBySpringCGLIB$$ecbeee86.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973.defaultWebSecurityManager(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:991)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:865)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:574)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:479)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1412)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1211)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1124)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1097)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:240)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:721)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:534)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at org.linlinjava.litemall.Application.main(Application.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 166 common frames omitted
2020-01-03 09:46:49,205 ERROR [restartedMain] c.alibaba.druid.pool.DruidDataSource [DruidDataSource.java : 905] {dataSource-1} init error
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:861)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1903)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1846)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1500)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:496)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:636)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:180)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:394)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:366)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973.realm(<generated>)
	at org.linlinjava.litemall.admin.config.ShiroConfig.defaultWebSecurityManager(ShiroConfig.java:55)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973.CGLIB$defaultWebSecurityManager$3(<generated>)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973$$FastClassBySpringCGLIB$$ecbeee86.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973.defaultWebSecurityManager(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:991)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:865)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:574)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:479)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1412)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1211)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1124)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1097)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:240)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:721)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:534)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at org.linlinjava.litemall.Application.main(Application.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 166 common frames omitted
2020-01-03 09:46:49,308 ERROR [restartedMain] o.s.boot.SpringApplication [SpringApplication.java : 858] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectMapperConfigurer' defined in class path resource [springfox/documentation/spring/web/SpringfoxWebMvcConfiguration.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authorizationAttributeSourceAdvisor' defined in class path resource [org/linlinjava/litemall/admin/config/ShiroConfig.class]: Unsatisfied dependency expressed through method 'authorizationAttributeSourceAdvisor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [org/linlinjava/litemall/admin/config/ShiroConfig.class]: Unsatisfied dependency expressed through method 'shiroFilterFactoryBean' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultWebSecurityManager' defined in class path resource [org/linlinjava/litemall/admin/config/ShiroConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.shiro.web.mgt.DefaultWebSecurityManager]: Factory method 'defaultWebSecurityManager' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'realm': Unsatisfied dependency expressed through field 'adminService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'litemallAdminService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'litemallAdminMapper' defined in file [D:\MyCode\Java\litemall\litemall-db\target\classes\org\linlinjava\litemall\db\dao\LitemallAdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:240)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:721)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:534)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at org.linlinjava.litemall.Application.main(Application.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authorizationAttributeSourceAdvisor' defined in class path resource [org/linlinjava/litemall/admin/config/ShiroConfig.class]: Unsatisfied dependency expressed through method 'authorizationAttributeSourceAdvisor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [org/linlinjava/litemall/admin/config/ShiroConfig.class]: Unsatisfied dependency expressed through method 'shiroFilterFactoryBean' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultWebSecurityManager' defined in class path resource [org/linlinjava/litemall/admin/config/ShiroConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.shiro.web.mgt.DefaultWebSecurityManager]: Factory method 'defaultWebSecurityManager' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'realm': Unsatisfied dependency expressed through field 'adminService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'litemallAdminService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'litemallAdminMapper' defined in file [D:\MyCode\Java\litemall\litemall-db\target\classes\org\linlinjava\litemall\db\dao\LitemallAdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:769)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1124)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1097)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [org/linlinjava/litemall/admin/config/ShiroConfig.class]: Unsatisfied dependency expressed through method 'shiroFilterFactoryBean' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultWebSecurityManager' defined in class path resource [org/linlinjava/litemall/admin/config/ShiroConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.shiro.web.mgt.DefaultWebSecurityManager]: Factory method 'defaultWebSecurityManager' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'realm': Unsatisfied dependency expressed through field 'adminService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'litemallAdminService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'litemallAdminMapper' defined in file [D:\MyCode\Java\litemall\litemall-db\target\classes\org\linlinjava\litemall\db\dao\LitemallAdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:769)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:991)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:865)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:574)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:479)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1412)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1211)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	... 36 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultWebSecurityManager' defined in class path resource [org/linlinjava/litemall/admin/config/ShiroConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.shiro.web.mgt.DefaultWebSecurityManager]: Factory method 'defaultWebSecurityManager' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'realm': Unsatisfied dependency expressed through field 'adminService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'litemallAdminService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'litemallAdminMapper' defined in file [D:\MyCode\Java\litemall\litemall-db\target\classes\org\linlinjava\litemall\db\dao\LitemallAdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	... 50 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.shiro.web.mgt.DefaultWebSecurityManager]: Factory method 'defaultWebSecurityManager' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'realm': Unsatisfied dependency expressed through field 'adminService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'litemallAdminService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'litemallAdminMapper' defined in file [D:\MyCode\Java\litemall\litemall-db\target\classes\org\linlinjava\litemall\db\dao\LitemallAdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	... 64 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'realm': Unsatisfied dependency expressed through field 'adminService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'litemallAdminService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'litemallAdminMapper' defined in file [D:\MyCode\Java\litemall\litemall-db\target\classes\org\linlinjava\litemall\db\dao\LitemallAdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:394)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:366)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973.realm(<generated>)
	at org.linlinjava.litemall.admin.config.ShiroConfig.defaultWebSecurityManager(ShiroConfig.java:55)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973.CGLIB$defaultWebSecurityManager$3(<generated>)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973$$FastClassBySpringCGLIB$$ecbeee86.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.linlinjava.litemall.admin.config.ShiroConfig$$EnhancerBySpringCGLIB$$733ef973.defaultWebSecurityManager(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 65 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'litemallAdminService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'litemallAdminMapper' defined in file [D:\MyCode\Java\litemall\litemall-db\target\classes\org\linlinjava\litemall\db\dao\LitemallAdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 88 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'litemallAdminMapper' defined in file [D:\MyCode\Java\litemall\litemall-db\target\classes\org\linlinjava\litemall\db\dao\LitemallAdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1515)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:496)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:636)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:180)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:321)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:769)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1500)
	... 115 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	... 128 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:218)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:861)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1903)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1846)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 139 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 166 common frames omitted
2020-01-03 09:48:23,380 INFO [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 50] Starting Application on LAPTOP-1DJL8JUI with PID 9540 (D:\MyCode\Java\litemall\litemall-all\target\classes started by 迎港 in D:\MyCode\Java\litemall)
2020-01-03 09:48:23,389 DEBUG [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 53] Running with Spring Boot v2.1.5.RELEASE, Spring v5.1.7.RELEASE
2020-01-03 09:48:23,391 INFO [restartedMain] org.linlinjava.litemall.Application [SpringApplication.java : 679] The following profiles are active: db,core,admin,wx
2020-01-03 09:48:32,493 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from litemall_system WHERE ( deleted = ? ) 
2020-01-03 09:48:32,725 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:48:32,792 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 18
2020-01-03 09:48:32,802 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 42] ===========================================================================================================================================================================================================
2020-01-03 09:48:32,802 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 43] 
2020-01-03 09:48:32,803 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 44]               Litemall 初始化信息
2020-01-03 09:48:32,803 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 45] 
2020-01-03 09:48:32,803 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 09:48:32,804 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  系统信息  ]]
2020-01-03 09:48:32,804 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 09:48:32,804 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     服务器端口        ->        8080
2020-01-03 09:48:32,805 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     数据库USER        ->        root
2020-01-03 09:48:32,805 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     数据库地址        ->        jdbc:mysql://localhost:3306/iitemmall?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&verifyServerCertificate=false&useSSL=false
2020-01-03 09:48:32,806 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 09:48:32,807 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  模块状态  ]]
2020-01-03 09:48:32,809 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 09:48:32,809 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     邮件        ->        false
2020-01-03 09:48:32,810 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     短信        ->        false
2020-01-03 09:48:32,810 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     模版消息        ->        false
2020-01-03 09:48:32,810 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     快递信息        ->        false
2020-01-03 09:48:32,811 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     快递鸟ID        ->        XXXXXXXXX
2020-01-03 09:48:32,811 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     对象存储        ->        local
2020-01-03 09:48:32,811 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     本地对象存储路径        ->        storage
2020-01-03 09:48:32,812 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     本地对象访问地址        ->        http://localhost:8080/wx/storage/fetch/
2020-01-03 09:48:32,812 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 09:48:32,812 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  微信相关  ]]
2020-01-03 09:48:32,813 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 09:48:32,813 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信APP KEY        ->        wx1cd22d00f1fac673
2020-01-03 09:48:32,814 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信APP-SECRET        ->        605f2f679e7680182093bb1e951cf556
2020-01-03 09:48:32,816 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付MCH-ID        ->        111111
2020-01-03 09:48:32,816 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付MCH-KEY        ->        xxxxxx
2020-01-03 09:48:32,816 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付通知地址        ->        http://www.example.com/wx/order/pay-notify
2020-01-03 09:48:32,817 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 09:48:32,817 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  系统设置  ]]
2020-01-03 09:48:32,817 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 09:48:32,817 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     自动创建朋友圈分享图        ->        false
2020-01-03 09:48:32,818 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     商场名称        ->        litemall
2020-01-03 09:48:32,818 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     首页显示记录数：NEW,HOT,BRAND,TOPIC,CatlogList,CatlogMore        ->        6,6,4,4,4,4
2020-01-03 09:48:32,818 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 49]   
2020-01-03 09:48:32,818 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 50] ===========================================================================================================================================================================================================
2020-01-03 09:48:39,448 INFO [scheduling-1] o.l.litemall.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-01-03 09:48:40,662 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, tag, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, code, time_type, `days`, start_time, end_time, add_time, update_time, deleted from litemall_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-01-03 09:48:40,673 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-01-03 09:48:39.469(Timestamp), false(Boolean)
2020-01-03 09:48:40,683 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 09:48:40,701 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from litemall_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-01-03 09:48:40,705 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-01-03 09:48:40.692(Timestamp), false(Boolean)
2020-01-03 09:48:40,708 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 09:48:42,929 INFO [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 59] Started Application in 21.74 seconds (JVM running for 26.103)
2020-01-03 09:48:42,979 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, order_sn, order_status, consignee, mobile, address, message, goods_price, freight_price, coupon_price, integral_price, groupon_price, order_price, actual_price, pay_id, pay_time, ship_sn, ship_channel, ship_time, refund_amount, refund_type, refund_content, refund_time, confirm_time, comments, end_time, add_time, update_time, deleted from litemall_order WHERE ( order_status = ? and deleted = ? ) 
2020-01-03 09:48:42,986 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 101(Short), false(Boolean)
2020-01-03 09:48:42,992 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 09:48:43,019 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules WHERE ( `status` = ? and deleted = ? ) 
2020-01-03 09:48:43,023 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean)
2020-01-03 09:48:43,255 ERROR [restartedMain] o.s.boot.SpringApplication [SpringApplication.java : 858] Application run failed
java.lang.IllegalStateException: Failed to execute ApplicationRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:807)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:324)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at org.linlinjava.litemall.Application.main(Application.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'iitemmall.litemall_groupon_rules' doesn't exist
### The error may exist in org/linlinjava/litemall/db/dao/LitemallGrouponRulesMapper.xml
### The error may involve org.linlinjava.litemall.db.dao.LitemallGrouponRulesMapper.selectByExample-Inline
### The error occurred while setting parameters
### SQL: select                      id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`,      add_time, update_time, deleted         from litemall_groupon_rules                         WHERE (  `status` = ?                                                                and deleted = ? )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'iitemmall.litemall_groupon_rules' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'iitemmall.litemall_groupon_rules' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy79.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.selectByExample(Unknown Source)
	at org.linlinjava.litemall.db.service.LitemallGrouponRulesService.queryByStatus(LitemallGrouponRulesService.java:65)
	at org.linlinjava.litemall.admin.task.AdminTaskStartupRunner.run(AdminTaskStartupRunner.java:26)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:804)
	... 10 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'iitemmall.litemall_groupon_rules' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:619)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy90.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy146.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 19 common frames omitted
2020-01-03 09:54:13,249 INFO [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 50] Starting Application on LAPTOP-1DJL8JUI with PID 11044 (D:\MyCode\Java\litemall\litemall-all\target\classes started by 迎港 in D:\MyCode\Java\litemall)
2020-01-03 09:54:13,255 DEBUG [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 53] Running with Spring Boot v2.1.5.RELEASE, Spring v5.1.7.RELEASE
2020-01-03 09:54:13,256 INFO [restartedMain] org.linlinjava.litemall.Application [SpringApplication.java : 679] The following profiles are active: db,core,admin,wx
2020-01-03 09:54:25,290 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from litemall_system WHERE ( deleted = ? ) 
2020-01-03 09:54:25,561 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:54:25,856 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 18
2020-01-03 09:54:26,183 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 42] ===========================================================================================================================================================================================================
2020-01-03 09:54:26,185 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 43] 
2020-01-03 09:54:26,186 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 44]               Litemall 初始化信息
2020-01-03 09:54:26,188 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 45] 
2020-01-03 09:54:26,189 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 09:54:26,190 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  系统信息  ]]
2020-01-03 09:54:26,190 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 09:54:26,192 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     服务器端口        ->        8080
2020-01-03 09:54:26,194 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     数据库USER        ->        root
2020-01-03 09:54:26,195 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     数据库地址        ->        jdbc:mysql://localhost:3306/iitemmall?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&verifyServerCertificate=false&useSSL=false
2020-01-03 09:54:26,283 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 09:54:26,284 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  模块状态  ]]
2020-01-03 09:54:26,284 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 09:54:26,285 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     邮件        ->        false
2020-01-03 09:54:26,285 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     短信        ->        false
2020-01-03 09:54:26,285 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     模版消息        ->        false
2020-01-03 09:54:26,285 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     快递信息        ->        false
2020-01-03 09:54:26,286 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     快递鸟ID        ->        XXXXXXXXX
2020-01-03 09:54:26,286 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     对象存储        ->        local
2020-01-03 09:54:26,286 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     本地对象存储路径        ->        storage
2020-01-03 09:54:26,286 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     本地对象访问地址        ->        http://localhost:8080/wx/storage/fetch/
2020-01-03 09:54:26,287 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 09:54:26,287 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  微信相关  ]]
2020-01-03 09:54:26,287 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 09:54:26,287 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信APP KEY        ->        wx1cd22d00f1fac673
2020-01-03 09:54:26,288 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信APP-SECRET        ->        605f2f679e7680182093bb1e951cf556
2020-01-03 09:54:26,288 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付MCH-ID        ->        111111
2020-01-03 09:54:26,288 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付MCH-KEY        ->        xxxxxx
2020-01-03 09:54:26,289 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付通知地址        ->        http://www.example.com/wx/order/pay-notify
2020-01-03 09:54:26,289 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 09:54:26,289 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  系统设置  ]]
2020-01-03 09:54:26,289 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 09:54:26,290 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     自动创建朋友圈分享图        ->        false
2020-01-03 09:54:26,290 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     商场名称        ->        litemall
2020-01-03 09:54:26,290 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     首页显示记录数：NEW,HOT,BRAND,TOPIC,CatlogList,CatlogMore        ->        6,6,4,4,4,4
2020-01-03 09:54:26,290 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 49]   
2020-01-03 09:54:26,291 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 50] ===========================================================================================================================================================================================================
2020-01-03 09:54:30,812 INFO [scheduling-1] o.l.litemall.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-01-03 09:54:31,196 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, tag, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, code, time_type, `days`, start_time, end_time, add_time, update_time, deleted from litemall_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-01-03 09:54:31,201 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-01-03 09:54:30.844(Timestamp), false(Boolean)
2020-01-03 09:54:31,206 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 09:54:31,218 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from litemall_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-01-03 09:54:31,219 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-01-03 09:54:31.212(Timestamp), false(Boolean)
2020-01-03 09:54:31,222 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 09:54:32,288 INFO [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 59] Started Application in 21.368 seconds (JVM running for 25.507)
2020-01-03 09:54:32,318 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, order_sn, order_status, consignee, mobile, address, message, goods_price, freight_price, coupon_price, integral_price, groupon_price, order_price, actual_price, pay_id, pay_time, ship_sn, ship_channel, ship_time, refund_amount, refund_type, refund_content, refund_time, confirm_time, comments, end_time, add_time, update_time, deleted from litemall_order WHERE ( order_status = ? and deleted = ? ) 
2020-01-03 09:54:32,322 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 101(Short), false(Boolean)
2020-01-03 09:54:32,337 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 09:54:32,356 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules WHERE ( `status` = ? and deleted = ? ) 
2020-01-03 09:54:32,357 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean)
2020-01-03 09:54:32,363 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 09:54:32,367 INFO [pool-1-thread-1] o.l.l.a.task.GrouponRuleExpiredTask [GrouponRuleExpiredTask.java : 27] 系统开始处理延时任务---团购规则过期---1
2020-01-03 09:54:32,376 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules where id = ? 
2020-01-03 09:54:32,381 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer)
2020-01-03 09:54:32,384 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:32,388 DEBUG [pool-1-thread-1] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_groupon_rules SET goods_id = ?, goods_name = ?, pic_url = ?, discount = ?, discount_member = ?, expire_time = ?, `status` = ?, add_time = ?, update_time = ?, deleted = ? where id = ? 
2020-01-03 09:54:32,400 DEBUG [pool-1-thread-1] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: 1039051(Integer), 多功能午睡枕(String), http://yanxuan.nosdn.127.net/c8ca0600fa7ba11ca8be6a3173dd38c9.png(String), 20(BigDecimal), 20(Integer), 2019-12-31 00:00:00.0(Timestamp), 1(Short), 2018-11-08 13:41:44.0(Timestamp), 2020-01-03 09:54:32.385(Timestamp), false(Boolean), 1(Integer)
2020-01-03 09:54:32,417 DEBUG [pool-1-thread-1] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:54:32,433 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, order_id, groupon_id, rules_id, user_id, share_url, creator_user_id, creator_user_time, `status`, add_time, update_time, deleted from litemall_groupon WHERE ( rules_id = ? and deleted = ? ) 
2020-01-03 09:54:32,435 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 09:54:32,438 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 09:54:32,439 INFO [pool-1-thread-1] o.l.l.a.task.GrouponRuleExpiredTask [GrouponRuleExpiredTask.java : 66] 系统结束处理延时任务---团购规则过期---1
2020-01-03 09:54:32,439 INFO [pool-1-thread-1] o.l.l.a.task.GrouponRuleExpiredTask [GrouponRuleExpiredTask.java : 27] 系统开始处理延时任务---团购规则过期---2
2020-01-03 09:54:32,440 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules where id = ? 
2020-01-03 09:54:32,440 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer)
2020-01-03 09:54:32,442 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:32,443 DEBUG [pool-1-thread-1] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_groupon_rules SET goods_id = ?, goods_name = ?, pic_url = ?, discount = ?, discount_member = ?, expire_time = ?, `status` = ?, add_time = ?, update_time = ?, deleted = ? where id = ? 
2020-01-03 09:54:32,444 DEBUG [pool-1-thread-1] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: 1109008(Integer), 云端沙发组合(String), http://yanxuan.nosdn.127.net/c5be2604c0e4186a4e7079feeb742cee.png(String), 50(BigDecimal), 5(Integer), 2019-12-31 00:00:00.0(Timestamp), 1(Short), 2018-11-08 13:42:44.0(Timestamp), 2020-01-03 09:54:32.442(Timestamp), false(Boolean), 2(Integer)
2020-01-03 09:54:32,459 DEBUG [pool-1-thread-1] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:54:32,461 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, order_id, groupon_id, rules_id, user_id, share_url, creator_user_id, creator_user_time, `status`, add_time, update_time, deleted from litemall_groupon WHERE ( rules_id = ? and deleted = ? ) 
2020-01-03 09:54:32,461 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 09:54:32,463 DEBUG [pool-1-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 09:54:32,463 INFO [pool-1-thread-1] o.l.l.a.task.GrouponRuleExpiredTask [GrouponRuleExpiredTask.java : 66] 系统结束处理延时任务---团购规则过期---2
2020-01-03 09:54:43,533 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 09:54:43,535 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-01-03 09:54:43,553 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:43,748 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 09:54:44,074 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 09:54:43.744(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-01-03 09:54:43.746(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-01-03 09:54:44,157 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:54:44,161 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 09:54:44,187 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 09:54:44.159(Timestamp), 2020-01-03 09:54:44.159(Timestamp)
2020-01-03 09:54:44,223 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:54:44,224 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 09:54:44,228 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 09:54:44,231 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:44,337 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:54:44,339 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 09:54:44,345 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:44,359 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:54:44,361 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 09:54:44,367 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:44,762 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 09:54:44,764 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:54:44,771 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:44,793 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 09:54:44,795 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:54:44,804 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:44,817 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 09:54:44,819 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:54:44,835 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:44,838 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 09:54:44,840 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:54:44,842 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:54:48,382 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 09:54:48,384 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 退出(String), true(Boolean), (String), (String), 2020-01-03 09:54:48.381(Timestamp), 2020-01-03 09:54:48.381(Timestamp)
2020-01-03 09:54:48,399 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:54:48,399 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 09:54:48,399 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 09:54:48,400 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:03,173 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 09:55:03,174 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), false(Boolean)
2020-01-03 09:55:03,176 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:03,294 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 09:55:03,296 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), $2a$10$aCtsc4rG6KmxQ59.IkYse.oRyKuwQoU2CPCmxSdB.d5nXq6aw/z4O(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 09:55:03.294(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2019-01-07 15:17:25.0(Timestamp), 2020-01-03 09:55:03.294(Timestamp), false(Boolean), [2](String), 5(Integer)
2020-01-03 09:55:03,313 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:55:03,314 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 09:55:03,315 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 09:55:03.314(Timestamp), 2020-01-03 09:55:03.314(Timestamp)
2020-01-03 09:55:03,329 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:55:03,330 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 09:55:03,331 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 09:55:03,334 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:03,369 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:55:03,370 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 09:55:03,372 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:03,373 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:55:03,374 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 09:55:03,378 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:03,613 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 09:55:03,614 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:55:03,617 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:03,619 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 09:55:03,620 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:55:03,622 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:03,624 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 09:55:03,625 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:55:03,627 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:03,629 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 09:55:03,630 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:55:03,631 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:08,692 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:55:08,695 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:55:08,695 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 09:55:08,698 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 09:55:08,698 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:08,705 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:55:08,705 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:08,706 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 09:55:08,707 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:55:08,709 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 09:55:08,712 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:08,714 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:08,801 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:55:08,801 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:55:08,802 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 09:55:08,802 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 09:55:08,804 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:08,804 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:08,806 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:55:08,806 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:55:08,807 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 09:55:08,807 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 09:55:08,811 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:08,811 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:08,835 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,835 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 09:55:08,837 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 09:55:08,837 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 09:55:08,847 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 09:55:08,849 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 09:55:08,854 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,855 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 09:55:08,861 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:08,863 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,864 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 09:55:08,871 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 09:55:08,873 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,874 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 09:55:08,878 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:08,880 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,881 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 09:55:08,885 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 09:55:08,887 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,888 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 09:55:08,891 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 09:55:08,895 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,895 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 09:55:08,899 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 09:55:08,902 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,903 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 09:55:08,908 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:08,910 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,911 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 09:55:08,915 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 09:55:08,918 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 09:55:08,919 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 09:55:08,923 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 09:55:12,550 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, pid, `name`, `type`, code from litemall_region WHERE ( `type` <> ? ) 
2020-01-03 09:55:12,554 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 4(Byte)
2020-01-03 09:55:12,685 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3231
2020-01-03 09:55:16,181 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:55:16,182 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 09:55:16,184 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:16,186 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:55:16,187 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 09:55:16,190 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:16,253 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:55:16,253 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 09:55:16,255 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:16,258 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:55:16,259 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 09:55:16,261 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 09:55:16,704 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_brand WHERE (deleted = ?) 
2020-01-03 09:55:16,709 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:55:16,713 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:16,717 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, pic_url, sort_order, floor_price, add_time, update_time, deleted from litemall_brand WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 09:55:16,723 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 09:55:16,734 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 09:55:24,428 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 09:55:24,430 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 退出(String), true(Boolean), (String), (String), 2020-01-03 09:55:24.428(Timestamp), 2020-01-03 09:55:24.428(Timestamp)
2020-01-03 09:55:24,446 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:55:24,447 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 09:55:24,448 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 09:55:24,449 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:35,053 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 09:55:35,054 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), false(Boolean)
2020-01-03 09:55:35,056 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:35,175 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 09:55:35,176 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), $2a$10$wDZLOLLnzZ1EFZ3ldZ1XFOUWDEX6TnQCUFdJz4g.PoMaLTzS8TjWq(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 09:55:35.174(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2019-01-07 15:16:59.0(Timestamp), 2020-01-03 09:55:35.174(Timestamp), false(Boolean), [3](String), 4(Integer)
2020-01-03 09:55:35,192 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:55:35,193 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 09:55:35,193 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 09:55:35.192(Timestamp), 2020-01-03 09:55:35.192(Timestamp)
2020-01-03 09:55:35,208 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:55:35,209 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 09:55:35,210 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 09:55:35,210 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:35,241 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:55:35,241 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), true(Boolean), false(Boolean)
2020-01-03 09:55:35,242 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:35,244 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:55:35,245 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 09:55:35,248 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 09:55:40,876 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, pid, `name`, `type`, code from litemall_region WHERE ( `type` <> ? ) 
2020-01-03 09:55:40,879 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 4(Byte)
2020-01-03 09:55:41,013 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3231
2020-01-03 09:55:54,374 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:55:54,376 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), true(Boolean), false(Boolean)
2020-01-03 09:55:54,378 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:54,380 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:55:54,380 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 09:55:54,383 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 09:55:54,577 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 09:55:54,580 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:55:54,588 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:54,610 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 09:55:54,612 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:55:54,615 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:54,618 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 09:55:54,618 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:55:54,620 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:54,622 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 09:55:54,623 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:55:54,625 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:55:57,874 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 09:55:57,875 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 退出(String), true(Boolean), (String), (String), 2020-01-03 09:55:57.871(Timestamp), 2020-01-03 09:55:57.871(Timestamp)
2020-01-03 09:55:57,891 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:55:57,892 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 09:55:57,893 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 09:55:57,894 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:56:05,426 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 09:56:05,428 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), false(Boolean)
2020-01-03 09:56:05,432 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:56:05,576 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 09:56:05,577 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), $2a$10$wDZLOLLnzZ1EFZ3ldZ1XFOUWDEX6TnQCUFdJz4g.PoMaLTzS8TjWq(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 09:56:05.575(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2019-01-07 15:16:59.0(Timestamp), 2020-01-03 09:56:05.575(Timestamp), false(Boolean), [3](String), 4(Integer)
2020-01-03 09:56:05,593 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:56:05,594 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 09:56:05,595 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 09:56:05.593(Timestamp), 2020-01-03 09:56:05.593(Timestamp)
2020-01-03 09:56:05,609 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 09:56:05,610 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 09:56:05,611 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 09:56:05,612 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:56:05,642 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 09:56:05,644 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), true(Boolean), false(Boolean)
2020-01-03 09:56:05,645 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:56:05,647 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 09:56:05,648 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 09:56:05,650 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 09:56:05,792 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 09:56:05,793 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:56:05,794 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:56:05,797 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 09:56:05,798 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:56:05,800 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:56:05,803 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 09:56:05,804 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:56:05,806 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 09:56:05,808 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 09:56:05,809 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 09:56:05,811 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:23,718 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 10:52:23,729 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), false(Boolean)
2020-01-03 10:52:23,768 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:23,895 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 10:52:23,898 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), $2a$10$wDZLOLLnzZ1EFZ3ldZ1XFOUWDEX6TnQCUFdJz4g.PoMaLTzS8TjWq(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 10:52:23.893(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2019-01-07 15:16:59.0(Timestamp), 2020-01-03 10:52:23.893(Timestamp), false(Boolean), [3](String), 4(Integer)
2020-01-03 10:52:23,906 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:52:23,909 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 10:52:23,910 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 10:52:23.907(Timestamp), 2020-01-03 10:52:23.907(Timestamp)
2020-01-03 10:52:23,916 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:52:23,917 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 10:52:23,917 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 10:52:23,919 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:23,960 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:52:23,961 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), true(Boolean), false(Boolean)
2020-01-03 10:52:23,965 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:23,968 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:52:23,969 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 10:52:23,972 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 10:52:24,508 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 10:52:24,509 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:24,514 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:24,520 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 10:52:24,523 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:24,532 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:24,535 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 10:52:24,536 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:24,539 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:24,543 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 10:52:24,543 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:24,545 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:30,526 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:52:30,528 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), true(Boolean), false(Boolean)
2020-01-03 10:52:30,530 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:30,532 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:52:30,534 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 10:52:30,536 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 10:52:30,572 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:52:30,573 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), true(Boolean), false(Boolean)
2020-01-03 10:52:30,574 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:30,575 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:52:30,576 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 10:52:30,578 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 10:52:30,595 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_coupon WHERE (deleted = ?) 
2020-01-03 10:52:30,603 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:30,605 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:30,607 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, tag, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, code, time_type, `days`, start_time, end_time, add_time, update_time, deleted from litemall_coupon WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 10:52:30,608 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 10:52:30,615 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 10:52:36,009 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 10:52:36,011 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: promotion123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 退出(String), true(Boolean), (String), (String), 2020-01-03 10:52:36.007(Timestamp), 2020-01-03 10:52:36.007(Timestamp)
2020-01-03 10:52:36,014 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:52:36,023 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 10:52:36,023 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 10:52:36,024 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:46,026 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 10:52:46,027 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), false(Boolean)
2020-01-03 10:52:46,030 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:46,153 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 10:52:46,154 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), $2a$10$aCtsc4rG6KmxQ59.IkYse.oRyKuwQoU2CPCmxSdB.d5nXq6aw/z4O(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 10:52:46.151(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2019-01-07 15:17:25.0(Timestamp), 2020-01-03 10:52:46.151(Timestamp), false(Boolean), [2](String), 5(Integer)
2020-01-03 10:52:46,157 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:52:46,158 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 10:52:46,159 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 10:52:46.157(Timestamp), 2020-01-03 10:52:46.157(Timestamp)
2020-01-03 10:52:46,161 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:52:46,162 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 10:52:46,163 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 10:52:46,164 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:46,194 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:52:46,195 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:52:46,196 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:46,198 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:52:46,199 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:52:46,200 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:52:50,840 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 10:52:50,841 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:50,843 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:50,846 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 10:52:50,847 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:50,848 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:50,855 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 10:52:50,855 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:50,857 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:50,859 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 10:52:50,860 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:50,862 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:53,977 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:52:53,978 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:52:53,982 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:53,988 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:52:53,989 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:52:53,991 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:52:54,223 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 10:52:54,224 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:54,226 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:54,228 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 10:52:54,228 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:54,230 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:54,232 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 10:52:54,233 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:54,235 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:54,238 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 10:52:54,239 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:52:54,240 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:52:56,778 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 10:52:56,780 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 退出(String), true(Boolean), (String), (String), 2020-01-03 10:52:56.777(Timestamp), 2020-01-03 10:52:56.777(Timestamp)
2020-01-03 10:52:56,783 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:52:56,783 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 10:52:56,784 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 10:52:56,785 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:08,121 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 10:53:08,123 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), false(Boolean)
2020-01-03 10:53:08,125 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:08,270 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 10:53:08,271 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), $2a$10$aCtsc4rG6KmxQ59.IkYse.oRyKuwQoU2CPCmxSdB.d5nXq6aw/z4O(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 10:53:08.268(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2019-01-07 15:17:25.0(Timestamp), 2020-01-03 10:53:08.268(Timestamp), false(Boolean), [2](String), 5(Integer)
2020-01-03 10:53:08,274 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:53:08,276 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 10:53:08,277 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 10:53:08.275(Timestamp), 2020-01-03 10:53:08.275(Timestamp)
2020-01-03 10:53:08,280 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:53:08,281 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 10:53:08,282 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 10:53:08,284 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:08,359 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:53:08,360 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:53:08,362 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:08,365 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:53:08,368 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:53:08,371 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:08,561 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 10:53:08,564 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:53:08,566 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:08,569 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 10:53:08,570 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:53:08,572 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:08,574 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 10:53:18,832 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:53:18,836 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:12,501 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:53:18,838 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:53:18,839 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 10:53:18,839 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:53:18,840 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:18,841 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:18,842 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:53:18,843 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:53:18,845 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:12,501 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:53:18,907 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:53:18,909 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:53:18,910 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:18,914 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:53:18,915 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:53:18,919 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:18,920 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:53:18,924 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:18,924 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 10:53:18,926 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 10:53:18,926 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:53:18,927 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:53:18,929 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:18,930 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:53:18,935 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:53:18,936 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:53:18,938 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:18,941 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:53:18,941 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:53:18,986 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:18,989 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:18,990 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 10:53:18,994 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:53:18,999 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:19,000 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 10:53:19,007 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:19,011 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:19,014 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 10:53:19,023 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:53:19,026 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:19,027 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 10:53:19,030 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:19,033 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:19,034 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 10:53:19,037 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:53:19,040 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:19,040 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 10:53:19,043 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 10:53:19,045 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:19,046 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 10:53:19,049 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 10:53:19,051 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:19,052 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 10:53:19,055 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:19,057 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:19,058 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 10:53:19,061 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 10:53:19,064 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:19,065 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 10:53:19,068 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 10:53:19,140 ERROR [http-nio-8080-exec-9] o.l.l.c.c.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:341)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:766)
	at org.apache.catalina.connector.OutputBuffer.append(OutputBuffer.java:671)
	at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:376)
	at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:354)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:96)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer(UTF8JsonGenerator.java:2085)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1097)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:287)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:136)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:105)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:144)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1265)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:748)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:518)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:456)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:530)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:112)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:189)
	at org.apache.coyote.Response.doWrite(Response.java:599)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:329)
	... 82 common frames omitted
2020-01-03 10:53:20,157 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 10:53:20,159 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:53:20,161 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:20,164 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 10:53:20,165 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:53:20,167 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:20,169 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 10:53:20,170 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:53:20,172 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:20,174 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 10:53:20,175 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:53:20,176 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:27,718 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:53:27,720 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:53:27,726 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:27,728 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:53:27,729 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:53:27,731 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:27,731 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:53:27,735 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:53:27,737 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:27,740 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:53:27,741 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:53:27,741 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:53:27,741 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:53:27,742 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:27,744 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:53:27,745 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:53:27,747 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:27,749 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 10:53:27,747 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:27,750 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 10:53:27,757 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:53:27,757 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:53:27,758 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:53:27,761 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:53:27,763 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:53:27,764 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:53:27,766 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:27,791 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,792 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 10:53:27,793 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:53:27,796 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,798 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 10:53:27,800 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:27,802 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,803 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 10:53:27,805 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:53:27,807 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,808 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 10:53:27,810 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:27,813 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,814 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 10:53:27,817 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:53:27,819 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,819 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 10:53:27,821 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 10:53:27,824 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,824 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 10:53:27,826 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 10:53:27,829 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,831 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 10:53:27,833 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:53:27,836 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,837 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 10:53:27,839 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 10:53:27,840 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:53:27,841 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 10:53:27,842 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 10:54:13,314 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:54:13,314 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:54:13,354 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:54:13,354 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:54:13,413 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:13,413 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:13,422 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:54:13,424 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:54:13,430 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:54:13,430 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:54:13,431 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:54:13,435 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:54:13,449 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:54:13,451 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:54:13,454 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:13,456 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:54:13,449 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:54:13,457 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:54:13,459 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:54:13,459 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:54:13,463 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:13,464 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,466 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:54:13,467 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:54:13,470 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:54:13,473 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 10:54:13,478 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 10:54:13,478 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 10:54:13,483 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:54:13,487 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,488 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 10:54:13,488 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:54:13,491 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:54:13,493 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,494 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 10:54:13,497 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:54:13,499 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,500 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 10:54:13,503 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:54:13,505 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,506 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 10:54:13,510 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 10:54:13,512 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,513 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 10:54:13,516 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 10:54:13,519 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,519 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 10:54:13,522 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 10:54:13,524 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,525 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 10:54:13,527 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:54:13,530 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,531 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 10:54:13,535 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 10:54:13,537 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 10:54:13,538 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 10:54:13,542 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 10:54:15,754 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:54:15,755 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:54:15,757 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:15,760 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:54:15,761 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:54:15,763 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:54:15,850 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:54:15,857 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), true(Boolean), false(Boolean)
2020-01-03 10:54:15,858 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:15,860 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:54:15,861 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), false(Boolean)
2020-01-03 10:54:15,863 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 10:54:15,880 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_brand WHERE (deleted = ?) 
2020-01-03 10:54:15,882 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:54:15,889 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:15,896 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, pic_url, sort_order, floor_price, add_time, update_time, deleted from litemall_brand WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 10:54:15,898 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 10:54:15,910 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 10:54:18,203 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 10:54:18,205 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:54:18,209 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:18,215 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 10:54:18,217 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:54:18,231 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:18,235 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 10:54:18,237 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:54:18,240 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:18,245 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 10:54:18,245 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:54:18,248 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:20,349 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 10:54:20,355 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: mall123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 退出(String), true(Boolean), (String), (String), 2020-01-03 10:54:20.346(Timestamp), 2020-01-03 10:54:20.347(Timestamp)
2020-01-03 10:54:20,372 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:54:20,374 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 10:54:20,376 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 10:54:20,379 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:22,520 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 10:54:22,522 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-01-03 10:54:22,525 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:22,710 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 10:54:22,722 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 10:54:22.708(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-01-03 10:54:22.708(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-01-03 10:54:22,728 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:54:22,730 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 10:54:22,732 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 10:54:22.729(Timestamp), 2020-01-03 10:54:22.729(Timestamp)
2020-01-03 10:54:22,734 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 10:54:22,736 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 10:54:22,737 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 10:54:22,738 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:22,816 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 10:54:22,817 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 10:54:22,818 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:22,825 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 10:54:22,826 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 10:54:22,828 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:23,163 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 10:54:23,164 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:54:23,166 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:23,169 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 10:54:23,169 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:54:23,171 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:23,172 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 10:54:23,173 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:54:23,174 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:23,177 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 10:54:23,178 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:54:23,179 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 10:54:30,865 INFO [scheduling-1] o.l.litemall.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-01-03 10:54:30,872 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, tag, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, code, time_type, `days`, start_time, end_time, add_time, update_time, deleted from litemall_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-01-03 10:54:30,874 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-01-03 10:54:30.869(Timestamp), false(Boolean)
2020-01-03 10:54:30,876 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 10:54:30,882 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from litemall_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-01-03 10:54:30,883 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-01-03 10:54:30.877(Timestamp), false(Boolean)
2020-01-03 10:54:30,884 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 10:59:47,749 INFO [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 50] Starting Application on LAPTOP-1DJL8JUI with PID 10300 (D:\MyCode\Java\litemall\litemall-all\target\classes started by 迎港 in D:\MyCode\Java\litemall)
2020-01-03 10:59:47,753 DEBUG [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 53] Running with Spring Boot v2.1.5.RELEASE, Spring v5.1.7.RELEASE
2020-01-03 10:59:47,753 INFO [restartedMain] org.linlinjava.litemall.Application [SpringApplication.java : 679] The following profiles are active: db,core,admin,wx
2020-01-03 10:59:55,932 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from litemall_system WHERE ( deleted = ? ) 
2020-01-03 10:59:56,096 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 10:59:56,144 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 18
2020-01-03 10:59:56,151 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 42] ===========================================================================================================================================================================================================
2020-01-03 10:59:56,151 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 43] 
2020-01-03 10:59:56,151 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 44]               Litemall 初始化信息
2020-01-03 10:59:56,152 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 45] 
2020-01-03 10:59:56,152 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 10:59:56,152 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  系统信息  ]]
2020-01-03 10:59:56,152 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 10:59:56,152 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     服务器端口        ->        8080
2020-01-03 10:59:56,152 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     数据库USER        ->        root
2020-01-03 10:59:56,153 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     数据库地址        ->        jdbc:mysql://localhost:3306/iitemmall?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&verifyServerCertificate=false&useSSL=false
2020-01-03 10:59:56,153 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 10:59:56,153 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  模块状态  ]]
2020-01-03 10:59:56,153 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 10:59:56,153 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     邮件        ->        false
2020-01-03 10:59:56,154 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     短信        ->        false
2020-01-03 10:59:56,154 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     模版消息        ->        false
2020-01-03 10:59:56,154 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     快递信息        ->        false
2020-01-03 10:59:56,155 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     快递鸟ID        ->        XXXXXXXXX
2020-01-03 10:59:56,155 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     对象存储        ->        local
2020-01-03 10:59:56,155 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     本地对象存储路径        ->        storage
2020-01-03 10:59:56,156 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     本地对象访问地址        ->        http://localhost:8080/wx/storage/fetch/
2020-01-03 10:59:56,156 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 10:59:56,156 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  微信相关  ]]
2020-01-03 10:59:56,156 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 10:59:56,156 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信APP KEY        ->        wx1cd22d00f1fac673
2020-01-03 10:59:56,156 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信APP-SECRET        ->        605f2f679e7680182093bb1e951cf556
2020-01-03 10:59:56,157 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付MCH-ID        ->        111111
2020-01-03 10:59:56,157 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付MCH-KEY        ->        xxxxxx
2020-01-03 10:59:56,157 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付通知地址        ->        http://www.example.com/wx/order/pay-notify
2020-01-03 10:59:56,157 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 10:59:56,157 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  系统设置  ]]
2020-01-03 10:59:56,157 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 10:59:56,158 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     自动创建朋友圈分享图        ->        false
2020-01-03 10:59:56,158 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     商场名称        ->        litemall
2020-01-03 10:59:56,158 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     首页显示记录数：NEW,HOT,BRAND,TOPIC,CatlogList,CatlogMore        ->        6,6,4,4,4,4
2020-01-03 10:59:56,158 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 49]   
2020-01-03 10:59:56,159 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 50] ===========================================================================================================================================================================================================
2020-01-03 11:00:02,223 INFO [scheduling-1] o.l.litemall.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-01-03 11:00:02,805 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, tag, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, code, time_type, `days`, start_time, end_time, add_time, update_time, deleted from litemall_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-01-03 11:00:02,812 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-01-03 11:00:02.239(Timestamp), false(Boolean)
2020-01-03 11:00:02,817 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:00:02,830 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from litemall_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-01-03 11:00:02,834 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-01-03 11:00:02.825(Timestamp), false(Boolean)
2020-01-03 11:00:02,836 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:00:03,982 INFO [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 59] Started Application in 18.433 seconds (JVM running for 21.985)
2020-01-03 11:00:04,010 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, order_sn, order_status, consignee, mobile, address, message, goods_price, freight_price, coupon_price, integral_price, groupon_price, order_price, actual_price, pay_id, pay_time, ship_sn, ship_channel, ship_time, refund_amount, refund_type, refund_content, refund_time, confirm_time, comments, end_time, add_time, update_time, deleted from litemall_order WHERE ( order_status = ? and deleted = ? ) 
2020-01-03 11:00:04,013 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 101(Short), false(Boolean)
2020-01-03 11:00:04,016 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:00:04,032 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules WHERE ( `status` = ? and deleted = ? ) 
2020-01-03 11:00:04,034 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean)
2020-01-03 11:00:04,039 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:12,924 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 11:00:12,927 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-01-03 11:00:12,943 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:13,084 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 11:00:13,110 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 11:00:13.082(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-01-03 11:00:13.082(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-01-03 11:00:13,124 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:00:13,127 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 11:00:13,142 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 11:00:13.126(Timestamp), 2020-01-03 11:00:13.126(Timestamp)
2020-01-03 11:00:13,148 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:00:13,149 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 11:00:13,153 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 11:00:13,157 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:13,215 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:00:13,217 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:00:13,220 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:13,231 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:00:13,233 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:00:13,235 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:13,627 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 11:00:13,630 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:00:13,634 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:13,656 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 11:00:13,658 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:00:13,670 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:13,687 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 11:00:13,689 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:00:13,693 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:13,697 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 11:00:13,699 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:00:13,701 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:16,483 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:00:16,486 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:00:16,488 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:16,492 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:00:16,493 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:00:16,495 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:16,586 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:00:16,587 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:00:16,601 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:16,604 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:00:16,605 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:00:16,605 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:16,683 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_ad WHERE (deleted = ?) 
2020-01-03 11:00:16,688 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:00:16,691 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:00:16,694 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, link, url, `position`, content, start_time, end_time, enabled, add_time, update_time, deleted from litemall_ad WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:00:16,703 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:00:16,709 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:02:09,647 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:02:09,656 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:02:09,664 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:02:09,669 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:02:09,670 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:02:09,673 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:02:09,716 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:02:09,717 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:02:09,719 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:02:09,723 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:02:09,724 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:02:09,725 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:02:09,753 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleWithBLOBs_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (deleted = ?) 
2020-01-03 11:02:09,762 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleWithBLOBs_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:02:09,764 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleWithBLOBs_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:02:09,766 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_sn, `name`, category_id, brand_id, gallery, keywords, brief, is_on_sale, sort_order, pic_url, share_url, is_new, is_hot, unit, counter_price, retail_price, add_time, update_time, deleted , detail from litemall_goods WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:02:09,769 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:02:09,842 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleWithBLOBs [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 11:02:11,654 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:02:11,657 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:02:11,663 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:02:11,668 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:02:11,670 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:02:11,681 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:02:11,685 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:02:11,688 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:02:11,692 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:02:11,694 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:02:11,695 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:02:11,700 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:02:11,703 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:02:11,704 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:02:11,707 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:02:11,709 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:02:11,710 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:02:11,716 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:02:11,719 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:02:11,720 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:02:11,723 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:02:11,726 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:02:11,727 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:02:11,730 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:02:11,733 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:02:11,734 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:02:11,737 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:02:11,740 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:02:11,740 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:02:11,745 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:02:11,760 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, pic_url, sort_order, floor_price, add_time, update_time, deleted from litemall_brand WHERE ( deleted = ? ) 
2020-01-03 11:02:11,761 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:02:11,776 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 49
2020-01-03 11:04:12,615 INFO [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 50] Starting Application on LAPTOP-1DJL8JUI with PID 21048 (D:\MyCode\Java\litemall\litemall-all\target\classes started by 迎港 in D:\MyCode\Java\litemall)
2020-01-03 11:04:12,621 DEBUG [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 53] Running with Spring Boot v2.1.5.RELEASE, Spring v5.1.7.RELEASE
2020-01-03 11:04:12,621 INFO [restartedMain] org.linlinjava.litemall.Application [SpringApplication.java : 679] The following profiles are active: db,core,admin,wx
2020-01-03 11:04:24,652 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from litemall_system WHERE ( deleted = ? ) 
2020-01-03 11:04:24,822 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:04:24,863 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 18
2020-01-03 11:04:24,871 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 42] ===========================================================================================================================================================================================================
2020-01-03 11:04:24,871 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 43] 
2020-01-03 11:04:24,872 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 44]               Litemall 初始化信息
2020-01-03 11:04:24,872 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 45] 
2020-01-03 11:04:24,872 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 11:04:24,872 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  系统信息  ]]
2020-01-03 11:04:24,872 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 11:04:24,873 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     服务器端口        ->        8080
2020-01-03 11:04:24,873 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     数据库USER        ->        root
2020-01-03 11:04:24,873 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     数据库地址        ->        jdbc:mysql://localhost:3306/iitemmall?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&verifyServerCertificate=false&useSSL=false
2020-01-03 11:04:24,873 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 11:04:24,873 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  模块状态  ]]
2020-01-03 11:04:24,873 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 11:04:24,874 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     邮件        ->        false
2020-01-03 11:04:24,874 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     短信        ->        false
2020-01-03 11:04:24,874 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     模版消息        ->        false
2020-01-03 11:04:24,874 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     快递信息        ->        false
2020-01-03 11:04:24,875 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     快递鸟ID        ->        XXXXXXXXX
2020-01-03 11:04:24,875 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     对象存储        ->        local
2020-01-03 11:04:24,875 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     本地对象存储路径        ->        storage
2020-01-03 11:04:24,876 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     本地对象访问地址        ->        http://localhost:8080/wx/storage/fetch/
2020-01-03 11:04:24,876 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 11:04:24,876 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  微信相关  ]]
2020-01-03 11:04:24,876 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 11:04:24,877 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信APP KEY        ->        wx1cd22d00f1fac673
2020-01-03 11:04:24,878 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信APP-SECRET        ->        605f2f679e7680182093bb1e951cf556
2020-01-03 11:04:24,878 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付MCH-ID        ->        111111
2020-01-03 11:04:24,879 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付MCH-KEY        ->        xxxxxx
2020-01-03 11:04:24,879 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     微信支付通知地址        ->        http://www.example.com/wx/order/pay-notify
2020-01-03 11:04:24,879 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 67] 
2020-01-03 11:04:24,879 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 68]     [[  系统设置  ]]
2020-01-03 11:04:24,879 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 69] 
2020-01-03 11:04:24,880 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     自动创建朋友圈分享图        ->        false
2020-01-03 11:04:24,880 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     商场名称        ->        litemall
2020-01-03 11:04:24,880 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 71]     首页显示记录数：NEW,HOT,BRAND,TOPIC,CatlogList,CatlogMore        ->        6,6,4,4,4,4
2020-01-03 11:04:24,880 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 49]   
2020-01-03 11:04:24,880 INFO [restartedMain] o.l.l.core.util.SystemInfoPrinter [SystemInfoPrinter.java : 50] ===========================================================================================================================================================================================================
2020-01-03 11:04:30,342 INFO [scheduling-1] o.l.litemall.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-01-03 11:04:30,736 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, tag, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, code, time_type, `days`, start_time, end_time, add_time, update_time, deleted from litemall_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-01-03 11:04:30,742 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-01-03 11:04:30.719(Timestamp), false(Boolean)
2020-01-03 11:04:30,744 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:04:30,756 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from litemall_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-01-03 11:04:30,758 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-01-03 11:04:30.752(Timestamp), false(Boolean)
2020-01-03 11:04:30,760 DEBUG [scheduling-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:04:32,304 INFO [restartedMain] org.linlinjava.litemall.Application [StartupInfoLogger.java : 59] Started Application in 21.405 seconds (JVM running for 25.097)
2020-01-03 11:04:32,339 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, order_sn, order_status, consignee, mobile, address, message, goods_price, freight_price, coupon_price, integral_price, groupon_price, order_price, actual_price, pay_id, pay_time, ship_sn, ship_channel, ship_time, refund_amount, refund_type, refund_content, refund_time, confirm_time, comments, end_time, add_time, update_time, deleted from litemall_order WHERE ( order_status = ? and deleted = ? ) 
2020-01-03 11:04:32,344 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 101(Short), false(Boolean)
2020-01-03 11:04:32,346 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:04:32,366 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules WHERE ( `status` = ? and deleted = ? ) 
2020-01-03 11:04:32,368 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean)
2020-01-03 11:04:32,371 DEBUG [restartedMain] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:38,765 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from litemall_admin WHERE ( username = ? and deleted = ? ) 
2020-01-03 11:04:38,769 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-01-03 11:04:38,788 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:39,005 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-01-03 11:04:39,046 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-01-03 11:04:39.001(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-01-03 11:04:39.001(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-01-03 11:04:39,071 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:04:39,075 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 11:04:39,094 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-01-03 11:04:39.072(Timestamp), 2020-01-03 11:04:39.072(Timestamp)
2020-01-03 11:04:39,111 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:04:39,113 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 11:04:39,117 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 11:04:39,121 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:39,276 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:04:39,281 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:04:39,285 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:39,302 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:04:39,306 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:04:39,310 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:39,941 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 11:04:39,944 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:04:39,949 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:39,977 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 11:04:39,980 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:04:39,990 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:40,007 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 11:04:40,008 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:04:40,011 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:40,015 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 11:04:40,017 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:04:40,019 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:44,109 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:04:44,113 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:04:44,116 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:44,121 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:04:44,122 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:04:44,124 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:44,241 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:04:44,242 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:04:44,245 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:44,252 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:04:44,253 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:04:44,255 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:44,343 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExampleWithBLOBs_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_topic WHERE (deleted = ?) 
2020-01-03 11:04:44,351 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExampleWithBLOBs_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:04:44,373 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExampleWithBLOBs_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:44,375 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==>  Preparing: select id, title, subtitle, price, read_count, pic_url, sort_order, goods, add_time, update_time, deleted , content from litemall_topic WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:04:44,383 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:04:44,407 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExampleWithBLOBs [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 11:04:54,317 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:04:54,319 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:04:54,322 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:54,324 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:04:54,325 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:04:54,328 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:54,345 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:04:54,346 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:04:54,348 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:54,350 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:04:54,351 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:04:54,352 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:04:54,360 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from litemall_system WHERE ( key_name like ? and deleted = ? ) 
2020-01-03 11:04:54,363 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: litemall_mall_%(String), false(Boolean)
2020-01-03 11:04:54,368 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 6
2020-01-03 11:05:02,711 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:05:02,712 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:05:02,714 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:02,715 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:05:02,716 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:05:02,719 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:05:02,720 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:02,720 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:05:02,722 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:02,723 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:05:02,724 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:05:02,726 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:02,761 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:05:02,761 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:05:02,762 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:05:02,762 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:05:02,764 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:02,764 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:02,767 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:05:02,768 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:05:02,769 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:05:02,769 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:05:02,770 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:02,771 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:02,791 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,791 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:05:02,793 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:05:02,794 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 11:05:02,802 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:05:02,802 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:05:02,806 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,807 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:05:02,814 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:05:02,815 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,816 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:05:02,819 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:05:02,821 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,822 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:05:02,827 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:05:02,829 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,830 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:05:02,833 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:05:02,834 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,835 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:05:02,839 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:05:02,843 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,845 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:05:02,847 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:05:02,849 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,850 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:05:02,853 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:05:02,856 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,857 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:05:02,862 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:05:02,863 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:02,864 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:05:02,867 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:05:58,080 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:05:58,086 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:05:58,092 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,096 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:05:58,097 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:05:58,105 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,406 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:05:58,408 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:05:58,408 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:05:58,409 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:05:58,410 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,412 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,414 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:05:58,414 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:05:58,415 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:05:58,415 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:05:58,416 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,416 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,420 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:05:58,421 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:05:58,419 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:05:58,423 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:05:58,423 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,426 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:05:58,427 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:05:58,429 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,429 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,432 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,433 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 11:05:58,433 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:05:58,436 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:05:58,438 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,439 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:05:58,434 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:05:58,443 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:05:58,445 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,446 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:05:58,441 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:05:58,449 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:05:58,453 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,454 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:05:58,458 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:05:58,461 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,462 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:05:58,465 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:05:58,467 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,467 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:05:58,468 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:05:58,468 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:05:58,471 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:05:58,471 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:05:58,477 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,478 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:05:58,481 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:05:58,487 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,488 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:05:58,492 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:05:58,494 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,495 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:05:58,498 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:05:58,501 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:05:58,502 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:05:58,506 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:06:06,609 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:06,610 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:06,612 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,614 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:06,615 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:06,617 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,944 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:06,945 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:06,944 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:06,945 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:06,950 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,951 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,957 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:06,958 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:06,959 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:06,960 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:06,961 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,964 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,965 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:06,966 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:06,968 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,970 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:06,969 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:06,971 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:06,971 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:06,973 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,973 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,975 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:06,975 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:06:06,976 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:06:06,976 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:06,978 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:06,979 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:06:06,983 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:06,984 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 11:06:06,987 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:06:06,989 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:06,990 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:06:06,995 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:06:06,998 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:06,998 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:06:07,000 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:06:07,002 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:07,003 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:06:07,005 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:06:07,007 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:07,009 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:06:07,012 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:06:07,014 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:07,014 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:06:07,018 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:06:07,020 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:07,021 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:06:07,025 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:06:07,027 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:07,028 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:06:07,031 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:06:07,034 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:07,035 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:06:07,038 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:06:07,041 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:06:07,042 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:06:07,046 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:06:13,277 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:13,279 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:13,282 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:13,285 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:13,286 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:13,288 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:13,381 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:13,382 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:13,384 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:13,387 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:13,389 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:13,392 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:13,446 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_ad WHERE (deleted = ?) 
2020-01-03 11:06:13,453 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:06:13,457 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:13,459 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, link, url, `position`, content, start_time, end_time, enabled, add_time, update_time, deleted from litemall_ad WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:06:13,463 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:06:13,465 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:06:21,948 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( deleted = ? ) 
2020-01-03 11:06:21,951 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:06:21,952 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:06:24,245 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:24,246 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:24,248 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:24,251 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:24,251 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:24,252 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:24,290 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:24,291 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:24,293 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:24,297 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:24,298 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:24,300 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:24,331 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_log WHERE (deleted = ?) 
2020-01-03 11:06:24,333 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:06:24,334 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:24,337 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time, deleted from litemall_log WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:06:24,338 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:06:24,347 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 17
2020-01-03 11:06:26,382 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:26,383 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:26,384 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:26,387 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:26,388 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:26,390 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:26,395 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:26,396 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:26,398 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:26,400 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:26,401 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:26,403 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:26,412 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_role WHERE (deleted = ?) 
2020-01-03 11:06:26,413 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:06:26,414 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:26,415 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:06:26,416 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:06:26,418 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:06:43,386 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:43,388 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:43,390 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:43,393 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:43,394 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:43,395 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:43,419 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:43,420 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:43,422 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:43,424 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:43,425 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:43,426 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:43,439 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_user WHERE (deleted = ?) 
2020-01-03 11:06:43,441 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:06:43,442 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:43,443 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, gender, birthday, last_login_time, last_login_ip, user_level, nickname, mobile, avatar, weixin_openid, session_key, `status`, add_time, update_time, deleted from litemall_user WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:06:43,445 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:06:43,451 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:45,428 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:45,429 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:45,431 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:45,435 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:45,435 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:45,437 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:45,466 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:45,467 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:45,469 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:45,472 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:45,472 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:45,474 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:45,501 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_address WHERE (deleted = ?) 
2020-01-03 11:06:45,503 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:06:45,506 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:51,063 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:51,063 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:51,065 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:51,068 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:51,069 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:51,070 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:51,077 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:51,078 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:51,080 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:51,082 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:51,083 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:51,084 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:51,109 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_search_history WHERE (deleted = ?) 
2020-01-03 11:06:51,110 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:06:51,113 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:53,562 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:53,563 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:53,566 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:53,568 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:53,569 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:53,570 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:53,600 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:53,601 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:53,603 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:53,605 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:53,606 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:53,607 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:53,639 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_feedback WHERE (deleted = ?) 
2020-01-03 11:06:53,641 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:06:53,643 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:58,913 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:58,914 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:58,917 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:58,919 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:58,920 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:58,921 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:58,924 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:06:58,924 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:06:58,925 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:58,932 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:06:58,933 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:06:58,935 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:06:58,938 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_search_history WHERE (deleted = ?) 
2020-01-03 11:06:58,938 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:06:58,939 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:10,662 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:10,667 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:10,684 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:10,692 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:10,694 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:10,696 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:14,838 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:14,839 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:14,881 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:14,905 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:14,907 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:14,909 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:15,449 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 11:08:15,453 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:08:15,456 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:15,462 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 11:08:15,463 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:08:15,466 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:15,470 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 11:08:15,471 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:08:15,487 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:15,491 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 11:08:15,492 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:08:15,495 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:22,908 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, pid, `name`, `type`, code from litemall_region WHERE ( `type` <> ? ) 
2020-01-03 11:08:22,920 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 4(Byte)
2020-01-03 11:08:23,147 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3231
2020-01-03 11:08:27,287 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:27,290 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:27,295 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:27,299 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:27,300 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:27,302 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:27,332 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:27,333 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:27,334 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:27,336 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:27,336 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:27,337 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:27,365 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_brand WHERE (deleted = ?) 
2020-01-03 11:08:27,368 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:08:27,369 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:27,371 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, pic_url, sort_order, floor_price, add_time, update_time, deleted from litemall_brand WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:08:27,373 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:08:27,386 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 11:08:29,233 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:29,234 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:29,236 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:29,236 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:29,237 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:29,238 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:29,238 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:29,239 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:29,240 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:29,241 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:29,241 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:29,243 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:29,244 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:29,245 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:29,246 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:29,247 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:29,247 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:29,248 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:29,249 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:29,250 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:29,250 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:29,251 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:29,251 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:29,252 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:29,254 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:08:29,254 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,255 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 11:08:29,256 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:08:29,259 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:08:29,260 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:08:29,261 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,265 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:08:29,269 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:08:29,272 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,274 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:08:29,277 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:08:29,280 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,282 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:08:29,285 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:08:29,287 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,287 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:08:29,290 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:08:29,292 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,294 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:08:29,296 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:08:29,299 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,300 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:08:29,302 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:08:29,304 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,306 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:08:29,309 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:08:29,311 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,313 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:08:29,315 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:08:29,317 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:08:29,317 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:08:29,322 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:08:31,879 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:31,880 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:31,882 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:31,884 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:31,885 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:31,887 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:31,919 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:31,920 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:31,923 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:31,925 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:31,926 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:31,928 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:31,950 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (deleted = ?) 
2020-01-03 11:08:31,951 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:08:31,953 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:35,015 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:35,016 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:35,018 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:35,020 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:35,022 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:35,024 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:35,047 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:35,048 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:35,049 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:35,052 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:35,053 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:35,056 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:35,076 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_issue WHERE (deleted = ?) 
2020-01-03 11:08:35,077 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:08:35,080 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:35,081 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, question, answer, add_time, update_time, deleted from litemall_issue WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:08:35,082 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:08:35,084 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:08:37,174 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:37,175 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:37,176 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:37,178 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:37,179 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:37,181 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:37,214 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:37,215 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:37,216 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:37,218 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:37,218 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:37,220 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:37,244 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_keyword WHERE (deleted = ?) 
2020-01-03 11:08:37,245 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:08:37,249 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:37,250 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, keyword, url, is_hot, is_default, sort_order, add_time, update_time, deleted from litemall_keyword WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:08:37,252 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:08:37,255 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:08:39,306 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:39,307 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:39,308 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:39,311 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:39,312 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:39,313 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:39,316 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:08:39,316 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:08:39,317 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:39,319 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:08:39,321 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:08:39,322 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:39,325 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_brand WHERE (deleted = ?) 
2020-01-03 11:08:39,326 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:08:39,327 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:08:39,329 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, pic_url, sort_order, floor_price, add_time, update_time, deleted from litemall_brand WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:08:39,330 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:08:39,333 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-01-03 11:09:00,378 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:09:00,379 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:09:00,386 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:09:00,389 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:09:00,389 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:09:00,391 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:09:03,718 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:09:03,719 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:09:03,720 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:09:03,723 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:09:03,723 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:09:03,725 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:09:04,062 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 11:09:04,063 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:09:04,064 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:09:04,066 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 11:09:04,067 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:09:04,068 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:09:04,070 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 11:09:04,070 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:09:04,072 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:09:04,074 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 11:09:04,075 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:09:04,076 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:09:10,454 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, pid, `name`, `type`, code from litemall_region WHERE ( `type` <> ? ) 
2020-01-03 11:09:10,455 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 4(Byte)
2020-01-03 11:09:10,537 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3231
2020-01-03 11:12:26,288 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:12:26,314 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:12:26,340 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:12:26,346 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:12:26,346 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:12:26,349 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:12:26,763 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, pid, `name`, `type`, code from litemall_region WHERE ( `type` <> ? ) 
2020-01-03 11:12:26,766 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 4(Byte)
2020-01-03 11:12:26,943 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3231
2020-01-03 11:13:45,166 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:13:45,185 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:13:45,193 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:45,198 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:13:45,199 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:13:45,202 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:45,212 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:13:45,213 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:13:45,214 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:45,216 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:13:45,217 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:13:45,219 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:45,225 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from litemall_system WHERE ( key_name like ? and deleted = ? ) 
2020-01-03 11:13:45,227 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: litemall_wx_%(String), false(Boolean)
2020-01-03 11:13:45,234 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:13:50,805 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( deleted = ? ) 
2020-01-03 11:13:50,812 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:13:50,814 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:13:53,661 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:13:53,662 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:13:53,663 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:53,665 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:13:53,666 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:13:53,668 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:53,677 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:13:53,678 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:13:53,679 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:53,680 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:13:53,681 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:13:53,683 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:53,692 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_log WHERE (deleted = ?) 
2020-01-03 11:13:53,693 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:13:53,699 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:53,701 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time, deleted from litemall_log WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:13:53,703 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:13:53,711 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 17
2020-01-03 11:13:55,744 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:13:55,745 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:13:55,747 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:55,750 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:13:55,751 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:13:55,753 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:55,756 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:13:55,757 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:13:55,759 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:55,760 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:13:55,761 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:13:55,762 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:55,764 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_role WHERE (deleted = ?) 
2020-01-03 11:13:55,766 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:13:55,768 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:13:55,769 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:13:55,771 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:13:55,772 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:14:05,557 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( deleted = ? ) 
2020-01-03 11:14:05,558 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:14:05,559 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:14:27,816 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:14:27,817 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:14:27,820 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:14:27,822 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:14:27,823 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:14:27,824 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:14:31,547 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:14:31,548 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:14:31,550 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:14:31,553 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:14:31,554 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:14:31,555 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:14:31,971 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 11:14:31,974 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:14:31,976 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:14:31,981 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 11:14:31,983 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:14:31,993 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:14:31,996 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 11:14:31,997 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:14:32,000 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:14:32,021 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 11:14:32,022 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:14:32,024 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:15:59,968 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( is_on_sale = ? and deleted = ? ) 
2020-01-03 11:16:00,010 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), false(Boolean)
2020-01-03 11:16:00,058 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,217 DEBUG [pool-4-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, link, url, `position`, content, start_time, end_time, enabled, add_time, update_time, deleted from litemall_ad WHERE ( `position` = ? and deleted = ? and enabled = ? ) 
2020-01-03 11:16:00,223 DEBUG [pool-4-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Byte), false(Boolean), true(Boolean)
2020-01-03 11:16:00,229 DEBUG [pool-4-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:16:00,240 DEBUG [pool-4-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , icon_url from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:16:00,242 DEBUG [pool-4-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:16:00,245 DEBUG [pool-4-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:16:00,246 DEBUG [pool-4-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_coupon WHERE (`type` = ? AND `status` = ? AND deleted = ?) 
2020-01-03 11:16:00,256 DEBUG [pool-4-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 0(Short), false(Boolean)
2020-01-03 11:16:00,258 DEBUG [pool-4-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,258 DEBUG [pool-4-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_groupon_rules WHERE (`status` = ? AND deleted = ?) 
2020-01-03 11:16:00,259 DEBUG [pool-4-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean)
2020-01-03 11:16:00,259 DEBUG [pool-4-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , `desc` , tag , `days` , start_time , end_time , discount , `min` from litemall_coupon WHERE ( `type` = ? and `status` = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:16:00,260 DEBUG [pool-4-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,261 DEBUG [pool-4-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 0(Short), false(Boolean), 3(Integer)
2020-01-03 11:16:00,267 DEBUG [pool-4-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules WHERE ( `status` = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:16:00,268 DEBUG [pool-4-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean), 5(Integer)
2020-01-03 11:16:00,269 DEBUG [pool-4-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 2
2020-01-03 11:16:00,272 DEBUG [pool-4-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,274 DEBUG [pool-4-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_brand WHERE (deleted = ?) 
2020-01-03 11:16:00,272 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_category WHERE (`level` = ? AND `name` <> ? AND deleted = ?) 
2020-01-03 11:16:00,273 DEBUG [pool-4-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_topic WHERE (deleted = ?) 
2020-01-03 11:16:00,272 DEBUG [pool-4-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (is_hot = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:16:00,277 DEBUG [pool-4-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_sn, `name`, category_id, brand_id, gallery, keywords, brief, is_on_sale, sort_order, pic_url, share_url, is_new, is_hot, unit, counter_price, retail_price, add_time, update_time, deleted , detail from litemall_goods WHERE ( id = ? and deleted = ? ) limit 1 
2020-01-03 11:16:00,279 DEBUG [pool-4-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==> Parameters: 1110016(Integer), false(Boolean)
2020-01-03 11:16:00,281 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), 推荐(String), false(Boolean)
2020-01-03 11:16:00,281 DEBUG [pool-4-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:16:00,285 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,284 DEBUG [pool-4-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,289 DEBUG [pool-4-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , `desc` , pic_url , floor_price from litemall_brand WHERE ( deleted = ? ) LIMIT ? 
2020-01-03 11:16:00,290 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and `name` <> ? and deleted = ? ) LIMIT ? 
2020-01-03 11:16:00,290 DEBUG [pool-4-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 4(Integer)
2020-01-03 11:16:00,290 DEBUG [pool-4-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (is_new = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:16:00,291 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), 推荐(String), false(Boolean), 4(Integer)
2020-01-03 11:16:00,293 DEBUG [pool-4-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:16:00,294 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:16:00,294 DEBUG [pool-4-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,282 DEBUG [pool-4-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:16:00,297 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:16:00,298 DEBUG [pool-4-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,298 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:16:00,292 DEBUG [pool-4-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:16:00,299 DEBUG [pool-4-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( is_hot = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:16:00,300 DEBUG [pool-4-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,297 DEBUG [pool-4-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:16:00,301 DEBUG [pool-4-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , title , subtitle , price , pic_url , read_count from litemall_topic WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:16:00,302 DEBUG [pool-4-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 4(Integer)
2020-01-03 11:16:00,302 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:16:00,303 DEBUG [pool-4-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,304 DEBUG [pool-4-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean), 6(Integer)
2020-01-03 11:16:00,305 DEBUG [pool-4-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( is_new = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:16:00,306 DEBUG [pool-4-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:16:00,306 DEBUG [pool-4-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean), 6(Integer)
2020-01-03 11:16:00,308 DEBUG [pool-4-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 6
2020-01-03 11:16:00,309 DEBUG [pool-4-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 6
2020-01-03 11:16:00,315 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:16:00,317 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008016(Integer), 1010003(Integer), 1011003(Integer), 1011004(Integer), 1015000(Integer), 1017000(Integer), 1036000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:16:00,319 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,321 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:16:00,323 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008016(Integer), 1010003(Integer), 1011003(Integer), 1011004(Integer), 1015000(Integer), 1017000(Integer), 1036000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:16:00,339 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:16:00,342 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:16:00,343 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:16:00,345 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:16:00,351 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:16:00,352 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1005007(Integer), 1005008(Integer), 1005009(Integer), 1007000(Integer), 1008011(Integer), 1008012(Integer), 1008013(Integer), 1013005(Integer), 1023000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:16:00,354 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,356 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:16:00,357 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1005007(Integer), 1005008(Integer), 1005009(Integer), 1007000(Integer), 1008011(Integer), 1008012(Integer), 1008013(Integer), 1013005(Integer), 1023000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:16:00,359 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:16:00,361 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:16:00,362 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:16:00,365 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:16:00,370 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:16:00,371 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1005010(Integer), 1005011(Integer), 1005012(Integer), 1005013(Integer), 1008014(Integer), 1008015(Integer), 1027000(Integer), 1027001(Integer), 1035003(Integer), 1036003(Integer), true(Boolean), false(Boolean)
2020-01-03 11:16:00,372 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,373 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:16:00,374 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1005010(Integer), 1005011(Integer), 1005012(Integer), 1005013(Integer), 1008014(Integer), 1008015(Integer), 1027000(Integer), 1027001(Integer), 1035003(Integer), 1036003(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:16:00,376 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:16:00,379 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:16:00,379 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:16:00,382 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:16:00,389 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:16:00,390 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008003(Integer), 1008007(Integer), 1008010(Integer), 1008018(Integer), 1010004(Integer), 1012001(Integer), 1013000(Integer), 1020008(Integer), 1022000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:16:00,392 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:16:00,394 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:16:00,396 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008003(Integer), 1008007(Integer), 1008010(Integer), 1008018(Integer), 1010004(Integer), 1012001(Integer), 1013000(Integer), 1020008(Integer), 1022000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:16:00,399 DEBUG [pool-4-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:19:15,276 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectOneByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, gender, birthday, last_login_time, last_login_ip, user_level, nickname, mobile, avatar, weixin_openid, session_key, `status`, add_time, update_time, deleted from litemall_user WHERE ( weixin_openid = ? and deleted = ? ) limit 1 
2020-01-03 11:19:15,300 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectOneByExample [BaseJdbcLogger.java : 159] ==> Parameters: oPGIF5kmdWyela8VHhQogpToH23o(String), false(Boolean)
2020-01-03 11:19:15,336 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectOneByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:19:15,351 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_user ( username, `password`, gender, last_login_time, last_login_ip, user_level, nickname, avatar, weixin_openid, session_key, `status`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 11:19:15,359 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: oPGIF5kmdWyela8VHhQogpToH23o(String), oPGIF5kmdWyela8VHhQogpToH23o(String), 1(Byte), 2020-01-03 11:19:15.342(Timestamp), 0:0:0:0:0:0:0:1(String), 0(Byte), 别回头(String), https://wx.qlogo.cn/mmopen/vi_32/v4E5f0BxxlmMZWE3b8ibn4aTF1XBanHDBZicXINCOoYSrMPzeChCHhPMNobAXL1icerjdf5m01S6Gc2HLdSJNeslA/132(String), oPGIF5kmdWyela8VHhQogpToH23o(String), HCZrPLm2D3s8HYJPdgUMoA==(String), 0(Byte), 2020-01-03 11:19:15.343(Timestamp), 2020-01-03 11:19:15.343(Timestamp)
2020-01-03 11:19:15,381 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:19:15,382 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 11:19:15,383 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 11:19:15,387 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:19:15,394 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, tag, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, code, time_type, `days`, start_time, end_time, add_time, update_time, deleted from litemall_coupon WHERE ( `type` = ? and `status` = ? and deleted = ? ) 
2020-01-03 11:19:15,397 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Short), 0(Short), false(Boolean)
2020-01-03 11:19:15,407 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:19:15,415 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_coupon_user WHERE ( user_id = ? and coupon_id = ? and deleted = ? ) 
2020-01-03 11:19:15,418 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 3(Integer), false(Boolean)
2020-01-03 11:19:15,421 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:19:15,426 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_coupon_user ( user_id, coupon_id, start_time, end_time, add_time, update_time ) values ( ?, ?, ?, ?, ?, ? ) 
2020-01-03 11:19:15,429 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 3(Integer), 2020-01-03 11:19:15.423(Timestamp), 2020-01-13 11:19:15.423(Timestamp), 2020-01-03 11:19:15.423(Timestamp), 2020-01-03 11:19:15.423(Timestamp)
2020-01-03 11:19:15,446 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:19:15,447 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 11:19:15,447 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 11:19:15,451 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:19:15,761 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:19:15,764 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:19:15,766 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:19:16,095 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectOneByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, gender, birthday, last_login_time, last_login_ip, user_level, nickname, mobile, avatar, weixin_openid, session_key, `status`, add_time, update_time, deleted from litemall_user WHERE ( weixin_openid = ? and deleted = ? ) limit 1 
2020-01-03 11:19:16,097 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectOneByExample [BaseJdbcLogger.java : 159] ==> Parameters: oPGIF5kmdWyela8VHhQogpToH23o(String), false(Boolean)
2020-01-03 11:19:16,101 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectOneByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:19:16,104 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_user SET username = ?, `password` = ?, gender = ?, last_login_time = ?, last_login_ip = ?, user_level = ?, nickname = ?, mobile = ?, avatar = ?, weixin_openid = ?, session_key = ?, `status` = ?, add_time = ?, update_time = ?, deleted = ? where id = ? 
2020-01-03 11:19:16,111 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: oPGIF5kmdWyela8VHhQogpToH23o(String), oPGIF5kmdWyela8VHhQogpToH23o(String), 1(Byte), 2020-01-03 11:19:16.102(Timestamp), 0:0:0:0:0:0:0:1(String), 0(Byte), 别回头(String), (String), https://wx.qlogo.cn/mmopen/vi_32/v4E5f0BxxlmMZWE3b8ibn4aTF1XBanHDBZicXINCOoYSrMPzeChCHhPMNobAXL1icerjdf5m01S6Gc2HLdSJNeslA/132(String), oPGIF5kmdWyela8VHhQogpToH23o(String), HCZrPLm2D3s8HYJPdgUMoA==(String), 0(Byte), 2020-01-03 11:19:15.0(Timestamp), 2020-01-03 11:19:16.103(Timestamp), false(Boolean), 3(Integer)
2020-01-03 11:19:16,130 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:19:21,501 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, user_id, province, city, county, address_detail, area_code, postal_code, tel, is_default, add_time, update_time, deleted from litemall_address WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:19:21,506 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:19:21,511 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:29:22,750 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, user_id, province, city, county, address_detail, area_code, postal_code, tel, is_default, add_time, update_time, deleted from litemall_address WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:29:22,793 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:29:22,833 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:29:23,380 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:29:23,382 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:29:23,386 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:30:30,837 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( is_on_sale = ? and deleted = ? ) 
2020-01-03 11:30:30,843 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), false(Boolean)
2020-01-03 11:30:30,887 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:30,925 DEBUG [pool-5-thread-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from litemall_coupon_user WHERE ( user_id = ? ) 
2020-01-03 11:30:30,929 DEBUG [pool-5-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, link, url, `position`, content, start_time, end_time, enabled, add_time, update_time, deleted from litemall_ad WHERE ( `position` = ? and deleted = ? and enabled = ? ) 
2020-01-03 11:30:30,942 DEBUG [pool-5-thread-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer)
2020-01-03 11:30:30,950 DEBUG [pool-5-thread-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:30,953 DEBUG [pool-5-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Byte), false(Boolean), true(Boolean)
2020-01-03 11:30:30,954 DEBUG [pool-5-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_groupon_rules WHERE (`status` = ? AND deleted = ?) 
2020-01-03 11:30:30,955 DEBUG [pool-5-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean)
2020-01-03 11:30:30,957 DEBUG [pool-5-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:30,959 DEBUG [pool-5-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:30:30,959 DEBUG [pool-5-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (is_new = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:30:30,960 DEBUG [pool-5-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:30:30,961 DEBUG [pool-5-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules WHERE ( `status` = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:30:30,961 DEBUG [pool-5-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:30,962 DEBUG [pool-5-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean), 5(Integer)
2020-01-03 11:30:30,962 DEBUG [pool-5-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( is_new = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:30:30,963 DEBUG [pool-5-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean), 6(Integer)
2020-01-03 11:30:30,972 DEBUG [pool-5-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_topic WHERE (deleted = ?) 
2020-01-03 11:30:30,980 DEBUG [pool-5-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_coupon WHERE (id NOT IN (?) AND `type` = ? AND `status` = ? AND deleted = ?) 
2020-01-03 11:30:30,983 DEBUG [pool-5-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 6
2020-01-03 11:30:30,964 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_category WHERE (`level` = ? AND `name` <> ? AND deleted = ?) 
2020-01-03 11:30:30,985 DEBUG [pool-5-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:30,982 DEBUG [pool-5-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_brand WHERE (deleted = ?) 
2020-01-03 11:30:30,986 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), 推荐(String), false(Boolean)
2020-01-03 11:30:30,982 DEBUG [pool-5-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:30:30,987 DEBUG [pool-5-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:30:30,982 DEBUG [pool-5-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , icon_url from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:30:30,991 DEBUG [pool-5-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:30,991 DEBUG [pool-5-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 0(Short), 0(Short), false(Boolean)
2020-01-03 11:30:30,992 DEBUG [pool-5-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:30,992 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:30,992 DEBUG [pool-5-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , `desc` , pic_url , floor_price from litemall_brand WHERE ( deleted = ? ) LIMIT ? 
2020-01-03 11:30:30,993 DEBUG [pool-5-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 4(Integer)
2020-01-03 11:30:30,993 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and `name` <> ? and deleted = ? ) LIMIT ? 
2020-01-03 11:30:30,994 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), 推荐(String), false(Boolean), 4(Integer)
2020-01-03 11:30:30,994 DEBUG [pool-5-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:30,994 DEBUG [pool-5-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , title , subtitle , price , pic_url , read_count from litemall_topic WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:30:30,995 DEBUG [pool-5-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 4(Integer)
2020-01-03 11:30:30,995 DEBUG [pool-5-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , `desc` , tag , `days` , start_time , end_time , discount , `min` from litemall_coupon WHERE ( id not in ( ? ) and `type` = ? and `status` = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:30:30,996 DEBUG [pool-5-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:30:30,987 DEBUG [pool-5-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (is_hot = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:30:30,999 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:30:30,999 DEBUG [pool-5-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:30:31,001 DEBUG [pool-5-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 0(Short), 0(Short), false(Boolean), 3(Integer)
2020-01-03 11:30:31,001 DEBUG [pool-5-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:30:31,001 DEBUG [pool-5-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:30:31,002 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:30:31,002 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:30:31,003 DEBUG [pool-5-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:30:31,004 DEBUG [pool-5-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:31,005 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:30:31,005 DEBUG [pool-5-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( is_hot = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:30:31,005 DEBUG [pool-5-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_sn, `name`, category_id, brand_id, gallery, keywords, brief, is_on_sale, sort_order, pic_url, share_url, is_new, is_hot, unit, counter_price, retail_price, add_time, update_time, deleted , detail from litemall_goods WHERE ( id = ? and deleted = ? ) limit 1 
2020-01-03 11:30:31,007 DEBUG [pool-5-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean), 6(Integer)
2020-01-03 11:30:31,007 DEBUG [pool-5-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 2
2020-01-03 11:30:31,007 DEBUG [pool-5-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==> Parameters: 1110016(Integer), false(Boolean)
2020-01-03 11:30:31,009 DEBUG [pool-5-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 6
2020-01-03 11:30:31,009 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:30:31,010 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008016(Integer), 1010003(Integer), 1011003(Integer), 1011004(Integer), 1015000(Integer), 1017000(Integer), 1036000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:30:31,013 DEBUG [pool-5-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:31,013 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:31,014 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:30:31,015 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008016(Integer), 1010003(Integer), 1011003(Integer), 1011004(Integer), 1015000(Integer), 1017000(Integer), 1036000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:30:31,019 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:30:31,021 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:30:31,022 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:30:31,023 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:30:31,026 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:30:31,027 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1005007(Integer), 1005008(Integer), 1005009(Integer), 1007000(Integer), 1008011(Integer), 1008012(Integer), 1008013(Integer), 1013005(Integer), 1023000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:30:31,028 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:31,029 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:30:31,030 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1005007(Integer), 1005008(Integer), 1005009(Integer), 1007000(Integer), 1008011(Integer), 1008012(Integer), 1008013(Integer), 1013005(Integer), 1023000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:30:31,031 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:30:31,032 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:30:31,033 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:30:31,035 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:30:31,037 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:30:31,038 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1005010(Integer), 1005011(Integer), 1005012(Integer), 1005013(Integer), 1008014(Integer), 1008015(Integer), 1027000(Integer), 1027001(Integer), 1035003(Integer), 1036003(Integer), true(Boolean), false(Boolean)
2020-01-03 11:30:31,038 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:31,039 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:30:31,040 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1005010(Integer), 1005011(Integer), 1005012(Integer), 1005013(Integer), 1008014(Integer), 1008015(Integer), 1027000(Integer), 1027001(Integer), 1035003(Integer), 1036003(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:30:31,042 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:30:31,043 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:30:31,044 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:30:31,045 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:30:31,048 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:30:31,049 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008003(Integer), 1008007(Integer), 1008010(Integer), 1008018(Integer), 1010004(Integer), 1012001(Integer), 1013000(Integer), 1020008(Integer), 1022000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:30:31,050 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:30:31,051 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:30:31,051 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008003(Integer), 1008007(Integer), 1008010(Integer), 1008018(Integer), 1010004(Integer), 1012001(Integer), 1013000(Integer), 1020008(Integer), 1022000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:30:31,052 DEBUG [pool-5-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:31:14,396 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:31:14,470 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:31:14,492 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:31:29,541 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:31:29,544 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:31:29,547 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:31:54,661 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:31:54,662 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:31:54,663 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:31:56,792 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_issue WHERE (deleted = ?) 
2020-01-03 11:31:56,793 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:31:56,801 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:31:56,809 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, question, answer, add_time, update_time, deleted from litemall_issue WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:31:56,810 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 10(Integer)
2020-01-03 11:31:56,816 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:32:04,185 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:32:04,186 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:32:04,190 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:32:54,258 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( is_on_sale = ? and deleted = ? ) 
2020-01-03 11:32:54,260 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), false(Boolean)
2020-01-03 11:32:54,263 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,272 DEBUG [pool-6-thread-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from litemall_coupon_user WHERE ( user_id = ? ) 
2020-01-03 11:32:54,276 DEBUG [pool-6-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (is_new = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:32:54,277 DEBUG [pool-6-thread-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer)
2020-01-03 11:32:54,277 DEBUG [pool-6-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:32:54,278 DEBUG [pool-6-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,278 DEBUG [pool-6-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (is_hot = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:32:54,279 DEBUG [pool-6-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( is_new = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:32:54,280 DEBUG [pool-6-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:32:54,280 DEBUG [pool-6-thread-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,280 DEBUG [pool-6-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean), 6(Integer)
2020-01-03 11:32:54,281 DEBUG [pool-6-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,283 DEBUG [pool-6-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( is_hot = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:32:54,283 DEBUG [pool-6-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean), 6(Integer)
2020-01-03 11:32:54,285 DEBUG [pool-6-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 6
2020-01-03 11:32:54,286 DEBUG [pool-6-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 6
2020-01-03 11:32:54,287 DEBUG [pool-6-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_coupon WHERE (id NOT IN (?) AND `type` = ? AND `status` = ? AND deleted = ?) 
2020-01-03 11:32:54,289 DEBUG [pool-6-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 0(Short), 0(Short), false(Boolean)
2020-01-03 11:32:54,292 DEBUG [pool-6-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,291 DEBUG [pool-6-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, link, url, `position`, content, start_time, end_time, enabled, add_time, update_time, deleted from litemall_ad WHERE ( `position` = ? and deleted = ? and enabled = ? ) 
2020-01-03 11:32:54,293 DEBUG [pool-6-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Byte), false(Boolean), true(Boolean)
2020-01-03 11:32:54,293 DEBUG [pool-6-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , `desc` , tag , `days` , start_time , end_time , discount , `min` from litemall_coupon WHERE ( id not in ( ? ) and `type` = ? and `status` = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:32:54,294 DEBUG [pool-6-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 0(Short), 0(Short), false(Boolean), 3(Integer)
2020-01-03 11:32:54,312 DEBUG [pool-6-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:32:54,314 DEBUG [pool-6-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 2
2020-01-03 11:32:54,321 DEBUG [pool-6-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_brand WHERE (deleted = ?) 
2020-01-03 11:32:54,316 DEBUG [pool-6-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_topic WHERE (deleted = ?) 
2020-01-03 11:32:54,339 DEBUG [pool-6-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:32:54,339 DEBUG [pool-6-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:32:54,340 DEBUG [pool-6-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,341 DEBUG [pool-6-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , `desc` , pic_url , floor_price from litemall_brand WHERE ( deleted = ? ) LIMIT ? 
2020-01-03 11:32:54,340 DEBUG [pool-6-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,342 DEBUG [pool-6-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 4(Integer)
2020-01-03 11:32:54,327 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_category WHERE (`level` = ? AND `name` <> ? AND deleted = ?) 
2020-01-03 11:32:54,342 DEBUG [pool-6-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , title , subtitle , price , pic_url , read_count from litemall_topic WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:32:54,343 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), 推荐(String), false(Boolean)
2020-01-03 11:32:54,344 DEBUG [pool-6-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:32:54,325 DEBUG [pool-6-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , icon_url from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:32:54,345 DEBUG [pool-6-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 4(Integer)
2020-01-03 11:32:54,345 DEBUG [pool-6-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:32:54,345 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,346 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and `name` <> ? and deleted = ? ) LIMIT ? 
2020-01-03 11:32:54,347 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), 推荐(String), false(Boolean), 4(Integer)
2020-01-03 11:32:54,347 DEBUG [pool-6-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:32:54,349 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:32:54,350 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:32:54,352 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:32:54,354 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:32:54,358 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:32:54,323 DEBUG [pool-6-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_groupon_rules WHERE (`status` = ? AND deleted = ?) 
2020-01-03 11:32:54,359 DEBUG [pool-6-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean)
2020-01-03 11:32:54,361 DEBUG [pool-6-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,362 DEBUG [pool-6-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules WHERE ( `status` = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:32:54,364 DEBUG [pool-6-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean), 5(Integer)
2020-01-03 11:32:54,366 DEBUG [pool-6-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,366 DEBUG [pool-6-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:32:54,366 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008016(Integer), 1010003(Integer), 1011003(Integer), 1011004(Integer), 1015000(Integer), 1017000(Integer), 1036000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:32:54,368 DEBUG [pool-6-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_sn, `name`, category_id, brand_id, gallery, keywords, brief, is_on_sale, sort_order, pic_url, share_url, is_new, is_hot, unit, counter_price, retail_price, add_time, update_time, deleted , detail from litemall_goods WHERE ( id = ? and deleted = ? ) limit 1 
2020-01-03 11:32:54,369 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,369 DEBUG [pool-6-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==> Parameters: 1110016(Integer), false(Boolean)
2020-01-03 11:32:54,370 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:32:54,371 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008016(Integer), 1010003(Integer), 1011003(Integer), 1011004(Integer), 1015000(Integer), 1017000(Integer), 1036000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:32:54,374 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:32:54,375 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:32:54,376 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:32:54,377 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:32:54,381 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:32:54,383 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1005007(Integer), 1005008(Integer), 1005009(Integer), 1007000(Integer), 1008011(Integer), 1008012(Integer), 1008013(Integer), 1013005(Integer), 1023000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:32:54,384 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,385 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:32:54,386 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1005007(Integer), 1005008(Integer), 1005009(Integer), 1007000(Integer), 1008011(Integer), 1008012(Integer), 1008013(Integer), 1013005(Integer), 1023000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:32:54,387 DEBUG [pool-6-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,388 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:32:54,390 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:32:54,397 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:32:54,398 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:32:54,401 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:32:54,402 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1005010(Integer), 1005011(Integer), 1005012(Integer), 1005013(Integer), 1008014(Integer), 1008015(Integer), 1027000(Integer), 1027001(Integer), 1035003(Integer), 1036003(Integer), true(Boolean), false(Boolean)
2020-01-03 11:32:54,403 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,404 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:32:54,404 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1005010(Integer), 1005011(Integer), 1005012(Integer), 1005013(Integer), 1008014(Integer), 1008015(Integer), 1027000(Integer), 1027001(Integer), 1035003(Integer), 1036003(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:32:54,406 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:32:54,407 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:32:54,407 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:32:54,410 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:32:54,414 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:32:54,415 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008003(Integer), 1008007(Integer), 1008010(Integer), 1008018(Integer), 1010004(Integer), 1012001(Integer), 1013000(Integer), 1020008(Integer), 1022000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:32:54,416 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:32:54,417 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:32:54,418 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008003(Integer), 1008007(Integer), 1008010(Integer), 1008018(Integer), 1010004(Integer), 1012001(Integer), 1013000(Integer), 1020008(Integer), 1022000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:32:54,420 DEBUG [pool-6-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:33:08,063 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:33:08,065 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:33:08,068 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:33:36,199 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 11:33:36,202 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:33:36,206 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:33:36,208 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 11:33:36,209 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:33:36,212 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:33:36,216 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 11:33:36,218 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:33:36,228 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:33:36,231 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 11:33:36,232 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:33:36,233 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:33:49,598 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:33:49,601 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:33:49,606 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:33:49,610 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:33:49,612 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:33:49,615 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:33:49,664 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:33:49,665 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:33:49,667 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:33:49,669 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:33:49,670 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:33:49,672 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:33:49,683 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_issue WHERE (deleted = ?) 
2020-01-03 11:33:49,685 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:33:49,687 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:33:49,689 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, question, answer, add_time, update_time, deleted from litemall_issue WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:33:49,690 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 20(Integer)
2020-01-03 11:33:49,694 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:34:39,535 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:34:39,557 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:34:39,570 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:34:39,575 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:34:39,576 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:34:39,577 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:34:43,627 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:34:43,628 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:34:43,630 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:34:43,632 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:34:43,633 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:34:43,635 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:34:44,111 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_user WHERE ( deleted = ? ) 
2020-01-03 11:34:44,113 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:34:44,117 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:34:44,124 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( deleted = ? ) 
2020-01-03 11:34:44,125 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:34:44,130 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:34:44,133 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods_product WHERE ( deleted = ? ) 
2020-01-03 11:34:44,135 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:34:44,137 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:34:44,141 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_order WHERE ( deleted = ? ) 
2020-01-03 11:34:44,142 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:34:44,144 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:37,016 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( is_on_sale = ? and deleted = ? ) 
2020-01-03 11:35:37,088 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), false(Boolean)
2020-01-03 11:35:37,156 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,222 DEBUG [pool-7-thread-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from litemall_coupon_user WHERE ( user_id = ? ) 
2020-01-03 11:35:39,326 DEBUG [pool-7-thread-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer)
2020-01-03 11:35:39,336 DEBUG [pool-7-thread-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,336 DEBUG [pool-7-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, link, url, `position`, content, start_time, end_time, enabled, add_time, update_time, deleted from litemall_ad WHERE ( `position` = ? and deleted = ? and enabled = ? ) 
2020-01-03 11:35:39,338 DEBUG [pool-7-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Byte), false(Boolean), true(Boolean)
2020-01-03 11:35:39,337 DEBUG [pool-7-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , icon_url from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:35:39,345 DEBUG [pool-7-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:35:39,345 DEBUG [pool-7-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_brand WHERE (deleted = ?) 
2020-01-03 11:35:39,352 DEBUG [pool-7-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:35:39,352 DEBUG [pool-7-thread-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 3
2020-01-03 11:35:39,353 DEBUG [pool-7-thread-6] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,353 DEBUG [pool-7-thread-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:35:39,356 DEBUG [pool-7-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , `desc` , pic_url , floor_price from litemall_brand WHERE ( deleted = ? ) LIMIT ? 
2020-01-03 11:35:39,356 DEBUG [pool-7-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 4(Integer)
2020-01-03 11:35:39,355 DEBUG [pool-7-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_coupon WHERE (id NOT IN (?) AND `type` = ? AND `status` = ? AND deleted = ?) 
2020-01-03 11:35:39,358 DEBUG [pool-7-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 0(Short), 0(Short), false(Boolean)
2020-01-03 11:35:39,360 DEBUG [pool-7-thread-3] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,355 DEBUG [pool-7-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_topic WHERE (deleted = ?) 
2020-01-03 11:35:39,361 DEBUG [pool-7-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-01-03 11:35:39,361 DEBUG [pool-7-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , `desc` , tag , `days` , start_time , end_time , discount , `min` from litemall_coupon WHERE ( id not in ( ? ) and `type` = ? and `status` = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:35:39,362 DEBUG [pool-7-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 0(Short), 0(Short), false(Boolean), 3(Integer)
2020-01-03 11:35:39,362 DEBUG [pool-7-thread-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:35:39,362 DEBUG [pool-7-thread-7] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,363 DEBUG [pool-7-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , title , subtitle , price , pic_url , read_count from litemall_topic WHERE ( deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:35:39,364 DEBUG [pool-7-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean), 4(Integer)
2020-01-03 11:35:39,365 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_category WHERE (`level` = ? AND `name` <> ? AND deleted = ?) 
2020-01-03 11:35:39,367 DEBUG [pool-7-thread-3] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 2
2020-01-03 11:35:39,367 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), 推荐(String), false(Boolean)
2020-01-03 11:35:39,368 DEBUG [pool-7-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (is_hot = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:35:39,368 DEBUG [pool-7-thread-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:35:39,369 DEBUG [pool-7-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:35:39,369 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,370 DEBUG [pool-7-thread-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,370 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and `name` <> ? and deleted = ? ) LIMIT ? 
2020-01-03 11:35:39,371 DEBUG [pool-7-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( is_hot = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:35:39,371 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), 推荐(String), false(Boolean), 4(Integer)
2020-01-03 11:35:39,372 DEBUG [pool-7-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean), 6(Integer)
2020-01-03 11:35:39,369 DEBUG [pool-7-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_groupon_rules WHERE (`status` = ? AND deleted = ?) 
2020-01-03 11:35:39,373 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:35:39,374 DEBUG [pool-7-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean)
2020-01-03 11:35:39,375 DEBUG [pool-7-thread-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 6
2020-01-03 11:35:39,375 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:35:39,375 DEBUG [pool-7-thread-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,374 DEBUG [pool-7-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (is_new = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:35:39,376 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:35:39,376 DEBUG [pool-7-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:35:39,378 DEBUG [pool-7-thread-4] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,378 DEBUG [pool-7-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_id, goods_name, pic_url, discount, discount_member, expire_time, `status`, add_time, update_time, deleted from litemall_groupon_rules WHERE ( `status` = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:35:39,378 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:35:39,378 DEBUG [pool-7-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( is_new = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:35:39,378 DEBUG [pool-7-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), false(Boolean), 5(Integer)
2020-01-03 11:35:39,379 DEBUG [pool-7-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), true(Boolean), false(Boolean), 6(Integer)
2020-01-03 11:35:39,381 DEBUG [pool-7-thread-4] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 6
2020-01-03 11:35:39,380 DEBUG [pool-7-thread-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,381 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:35:39,383 DEBUG [pool-7-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==>  Preparing: select id, goods_sn, `name`, category_id, brand_id, gallery, keywords, brief, is_on_sale, sort_order, pic_url, share_url, is_new, is_hot, unit, counter_price, retail_price, add_time, update_time, deleted , detail from litemall_goods WHERE ( id = ? and deleted = ? ) limit 1 
2020-01-03 11:35:39,384 DEBUG [pool-7-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] ==> Parameters: 1110016(Integer), false(Boolean)
2020-01-03 11:35:39,388 DEBUG [pool-7-thread-8] o.l.l.d.d.L.selectOneByExampleWithBLOBs [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,393 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008016(Integer), 1010003(Integer), 1011003(Integer), 1011004(Integer), 1015000(Integer), 1017000(Integer), 1036000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:35:39,397 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,398 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:35:39,399 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008016(Integer), 1010003(Integer), 1011003(Integer), 1011004(Integer), 1015000(Integer), 1017000(Integer), 1036000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:35:39,403 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:35:39,405 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:35:39,406 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:35:39,408 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:35:39,411 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:35:39,412 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1005007(Integer), 1005008(Integer), 1005009(Integer), 1007000(Integer), 1008011(Integer), 1008012(Integer), 1008013(Integer), 1013005(Integer), 1023000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:35:39,413 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,414 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:35:39,415 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1005007(Integer), 1005008(Integer), 1005009(Integer), 1007000(Integer), 1008011(Integer), 1008012(Integer), 1008013(Integer), 1013005(Integer), 1023000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:35:39,417 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:35:39,418 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:35:39,419 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:35:39,421 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:35:39,424 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:35:39,425 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1005010(Integer), 1005011(Integer), 1005012(Integer), 1005013(Integer), 1008014(Integer), 1008015(Integer), 1027000(Integer), 1027001(Integer), 1035003(Integer), 1036003(Integer), true(Boolean), false(Boolean)
2020-01-03 11:35:39,427 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,428 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:35:39,428 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1005010(Integer), 1005011(Integer), 1005012(Integer), 1005013(Integer), 1008014(Integer), 1008015(Integer), 1027000(Integer), 1027001(Integer), 1035003(Integer), 1036003(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:35:39,430 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:35:39,432 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:35:39,432 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:35:39,434 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:35:39,439 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?) AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:35:39,441 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008003(Integer), 1008007(Integer), 1008010(Integer), 1008018(Integer), 1010004(Integer), 1012001(Integer), 1013000(Integer), 1020008(Integer), 1022000(Integer), true(Boolean), false(Boolean)
2020-01-03 11:35:39,442 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:35:39,443 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:35:39,444 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008003(Integer), 1008007(Integer), 1008010(Integer), 1008018(Integer), 1010004(Integer), 1012001(Integer), 1013000(Integer), 1020008(Integer), 1022000(Integer), true(Boolean), false(Boolean), 4(Integer)
2020-01-03 11:35:39,446 DEBUG [pool-7-thread-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 4
2020-01-03 11:36:16,805 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:36:16,807 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:36:16,811 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:36:21,907 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (user_id = ? AND order_status IN (?) AND deleted = ?) 
2020-01-03 11:36:21,917 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 301(Short), false(Boolean)
2020-01-03 11:36:21,920 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:36:24,613 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:36:24,615 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:36:24,617 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:36:27,081 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (user_id = ? AND order_status IN (?) AND deleted = ?) 
2020-01-03 11:36:27,082 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 201(Short), false(Boolean)
2020-01-03 11:36:27,084 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:36:29,795 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (user_id = ? AND order_status IN (?) AND deleted = ?) 
2020-01-03 11:36:29,796 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 401(Short), false(Boolean)
2020-01-03 11:36:29,798 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:36:30,967 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (user_id = ? AND deleted = ?) 
2020-01-03 11:36:30,968 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:36:30,970 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:36:32,454 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:36:32,455 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:36:32,457 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:36:34,954 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (user_id = ? AND deleted = ?) 
2020-01-03 11:36:34,954 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:36:34,955 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:36:36,565 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:36:36,565 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:36:36,567 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:36:50,328 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from litemall_goods WHERE ( is_on_sale = ? and deleted = ? ) 
2020-01-03 11:36:50,329 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), false(Boolean)
2020-01-03 11:36:50,330 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:36:50,331 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:36:50,331 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:36:50,334 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:36:50,336 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:36:50,337 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:36:50,339 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:37:01,819 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category where id = ? 
2020-01-03 11:37:01,849 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer)
2020-01-03 11:37:01,851 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:37:01,854 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:37:01,855 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:37:01,857 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:37:01,967 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id = ? AND is_on_sale = ? AND deleted = ?) OR (category_id = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:37:01,969 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008001(Integer), true(Boolean), false(Boolean), 1008001(Integer), true(Boolean), false(Boolean)
2020-01-03 11:37:01,972 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:37:01,974 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id = ? and is_on_sale = ? and deleted = ? ) or( category_id = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:37:01,976 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008001(Integer), true(Boolean), false(Boolean), 1008001(Integer), true(Boolean), false(Boolean), 10(Integer)
2020-01-03 11:37:01,979 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:37:01,981 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select category_id from litemall_goods WHERE ( is_on_sale = ? and deleted = ? ) or( is_on_sale = ? and deleted = ? ) 
2020-01-03 11:37:01,983 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), false(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:37:01,995 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 238
2020-01-03 11:37:02,017 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( id inand `level` = ? and deleted = ? ) 
2020-01-03 11:37:02,025 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008009(Integer), 1008008(Integer), 1036000(Integer), 1008008(Integer), 1008001(Integer), 1008008(Integer), 1008008(Integer), 1008008(Integer), 1008002(Integer), 1008001(Integer), 1008009(Integer), 1008009(Integer), 1036000(Integer), 1008002(Integer), 1008008(Integer), 1008008(Integer), 1008008(Integer), 1008008(Integer), 1008002(Integer), 1008001(Integer), 1008001(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1005007(Integer), 1036000(Integer), 1008009(Integer), 1036000(Integer), 1005007(Integer), 1036000(Integer), 1008009(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1020003(Integer), 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008009(Integer), 1008008(Integer), 1008008(Integer), 1005007(Integer), 1008002(Integer), 1012003(Integer), 1008002(Integer), 1008009(Integer), 1008015(Integer), 1012003(Integer), 1012003(Integer), 1008009(Integer), 1008002(Integer), 1005007(Integer), 1005007(Integer), 1005007(Integer), 1005007(Integer), 1008002(Integer), 1008002(Integer), 1012003(Integer), 1010002(Integer), 1008002(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1008008(Integer), 1008008(Integer), 1008016(Integer), 1008016(Integer), 1011004(Integer), 1011004(Integer), 1008008(Integer), 1008008(Integer), 1036000(Integer), 1008015(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1008002(Integer), 1008002(Integer), 1005007(Integer), 1010002(Integer), 1012003(Integer), 1008008(Integer), 1008008(Integer), 1008002(Integer), 1008002(Integer), 1011004(Integer), 1011004(Integer), 1008009(Integer), 1008009(Integer), 1012001(Integer), 1008016(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1012001(Integer), 1008009(Integer), 1012003(Integer), 1012003(Integer), 1008008(Integer), 1010002(Integer), 1010002(Integer), 1017000(Integer), 1017000(Integer), 1011004(Integer), 1011004(Integer), 1011004(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1011004(Integer), 1011004(Integer), 1015000(Integer), 1011004(Integer), 1011004(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1008015(Integer), 1008001(Integer), 1010002(Integer), 1010002(Integer), 1012001(Integer), 1012001(Integer), 1008008(Integer), 1008009(Integer), 1008002(Integer), 1036000(Integer), 1020003(Integer), 1020003(Integer), 1020003(Integer), 1008015(Integer), 1011004(Integer), 1011004(Integer), 1015000(Integer), 1015000(Integer), 1020003(Integer), 1020003(Integer), 1011004(Integer), 1011004(Integer), 1020003(Integer), 1008008(Integer), 1010002(Integer), 1010002(Integer), 1008009(Integer), 1008009(Integer), 1012003(Integer), 1036000(Integer), 1008002(Integer), 1008001(Integer), 1008001(Integer), 1008001(Integer), 1008001(Integer), 1008002(Integer), 1017000(Integer), 1017000(Integer), 1008002(Integer), 1008002(Integer), 1036000(Integer), 1036000(Integer), 1036000(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008015(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1017000(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1010002(Integer), 1020003(Integer), 1020003(Integer), 1008002(Integer), 1008002(Integer), 1012003(Integer), 1036000(Integer), 1012001(Integer), 1008015(Integer), 1008015(Integer), 1008015(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008009(Integer), 1008009(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1012001(Integer), 1008009(Integer), 1032000(Integer), 1008009(Integer), 1008015(Integer), 1012001(Integer), 1005007(Integer), 1008008(Integer), L2(String), false(Boolean)
2020-01-03 11:37:02,033 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 16
2020-01-03 11:37:13,739 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category where id = ? 
2020-01-03 11:37:13,740 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer)
2020-01-03 11:37:13,741 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:37:13,744 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:37:13,744 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:37:13,756 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:37:13,840 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id = ? AND is_on_sale = ? AND deleted = ?) OR (category_id = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:37:13,841 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), true(Boolean), false(Boolean), 1008002(Integer), true(Boolean), false(Boolean)
2020-01-03 11:37:13,843 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:37:13,845 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id = ? and is_on_sale = ? and deleted = ? ) or( category_id = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:37:13,845 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), true(Boolean), false(Boolean), 1008002(Integer), true(Boolean), false(Boolean), 10(Integer)
2020-01-03 11:37:13,848 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:37:13,850 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select category_id from litemall_goods WHERE ( is_on_sale = ? and deleted = ? ) or( is_on_sale = ? and deleted = ? ) 
2020-01-03 11:37:13,851 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), false(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:37:13,861 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 238
2020-01-03 11:37:13,877 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( id inand `level` = ? and deleted = ? ) 
2020-01-03 11:37:13,879 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008009(Integer), 1008008(Integer), 1036000(Integer), 1008008(Integer), 1008001(Integer), 1008008(Integer), 1008008(Integer), 1008008(Integer), 1008002(Integer), 1008001(Integer), 1008009(Integer), 1008009(Integer), 1036000(Integer), 1008002(Integer), 1008008(Integer), 1008008(Integer), 1008008(Integer), 1008008(Integer), 1008002(Integer), 1008001(Integer), 1008001(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1005007(Integer), 1036000(Integer), 1008009(Integer), 1036000(Integer), 1005007(Integer), 1036000(Integer), 1008009(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1020003(Integer), 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008009(Integer), 1008008(Integer), 1008008(Integer), 1005007(Integer), 1008002(Integer), 1012003(Integer), 1008002(Integer), 1008009(Integer), 1008015(Integer), 1012003(Integer), 1012003(Integer), 1008009(Integer), 1008002(Integer), 1005007(Integer), 1005007(Integer), 1005007(Integer), 1005007(Integer), 1008002(Integer), 1008002(Integer), 1012003(Integer), 1010002(Integer), 1008002(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1008008(Integer), 1008008(Integer), 1008016(Integer), 1008016(Integer), 1011004(Integer), 1011004(Integer), 1008008(Integer), 1008008(Integer), 1036000(Integer), 1008015(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1008002(Integer), 1008002(Integer), 1005007(Integer), 1010002(Integer), 1012003(Integer), 1008008(Integer), 1008008(Integer), 1008002(Integer), 1008002(Integer), 1011004(Integer), 1011004(Integer), 1008009(Integer), 1008009(Integer), 1012001(Integer), 1008016(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1012001(Integer), 1008009(Integer), 1012003(Integer), 1012003(Integer), 1008008(Integer), 1010002(Integer), 1010002(Integer), 1017000(Integer), 1017000(Integer), 1011004(Integer), 1011004(Integer), 1011004(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1011004(Integer), 1011004(Integer), 1015000(Integer), 1011004(Integer), 1011004(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1008015(Integer), 1008001(Integer), 1010002(Integer), 1010002(Integer), 1012001(Integer), 1012001(Integer), 1008008(Integer), 1008009(Integer), 1008002(Integer), 1036000(Integer), 1020003(Integer), 1020003(Integer), 1020003(Integer), 1008015(Integer), 1011004(Integer), 1011004(Integer), 1015000(Integer), 1015000(Integer), 1020003(Integer), 1020003(Integer), 1011004(Integer), 1011004(Integer), 1020003(Integer), 1008008(Integer), 1010002(Integer), 1010002(Integer), 1008009(Integer), 1008009(Integer), 1012003(Integer), 1036000(Integer), 1008002(Integer), 1008001(Integer), 1008001(Integer), 1008001(Integer), 1008001(Integer), 1008002(Integer), 1017000(Integer), 1017000(Integer), 1008002(Integer), 1008002(Integer), 1036000(Integer), 1036000(Integer), 1036000(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008015(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1017000(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1010002(Integer), 1020003(Integer), 1020003(Integer), 1008002(Integer), 1008002(Integer), 1012003(Integer), 1036000(Integer), 1012001(Integer), 1008015(Integer), 1008015(Integer), 1008015(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008009(Integer), 1008009(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1012001(Integer), 1008009(Integer), 1032000(Integer), 1008009(Integer), 1008015(Integer), 1012001(Integer), 1005007(Integer), 1008008(Integer), L2(String), false(Boolean)
2020-01-03 11:37:13,895 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 16
2020-01-03 11:37:28,187 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category where id = ? 
2020-01-03 11:37:28,189 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer)
2020-01-03 11:37:28,191 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:37:28,193 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category where id = ? 
2020-01-03 11:37:28,194 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer)
2020-01-03 11:37:28,195 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:37:28,197 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:37:28,198 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:37:28,201 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:37:28,308 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_goods WHERE (category_id = ? AND is_on_sale = ? AND deleted = ?) OR (category_id = ? AND is_on_sale = ? AND deleted = ?) 
2020-01-03 11:37:28,308 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), true(Boolean), false(Boolean), 1008002(Integer), true(Boolean), false(Boolean)
2020-01-03 11:37:28,309 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:37:28,310 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id , `name` , brief , pic_url , is_hot , is_new , counter_price , retail_price from litemall_goods WHERE ( category_id = ? and is_on_sale = ? and deleted = ? ) or( category_id = ? and is_on_sale = ? and deleted = ? ) order by add_time desc LIMIT ? 
2020-01-03 11:37:28,310 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 1008002(Integer), true(Boolean), false(Boolean), 1008002(Integer), true(Boolean), false(Boolean), 10(Integer)
2020-01-03 11:37:28,312 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:37:28,314 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select category_id from litemall_goods WHERE ( is_on_sale = ? and deleted = ? ) or( is_on_sale = ? and deleted = ? ) 
2020-01-03 11:37:28,315 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: true(Boolean), false(Boolean), true(Boolean), false(Boolean)
2020-01-03 11:37:28,323 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 238
2020-01-03 11:37:28,361 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( id inand `level` = ? and deleted = ? ) 
2020-01-03 11:37:28,363 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008009(Integer), 1008008(Integer), 1036000(Integer), 1008008(Integer), 1008001(Integer), 1008008(Integer), 1008008(Integer), 1008008(Integer), 1008002(Integer), 1008001(Integer), 1008009(Integer), 1008009(Integer), 1036000(Integer), 1008002(Integer), 1008008(Integer), 1008008(Integer), 1008008(Integer), 1008008(Integer), 1008002(Integer), 1008001(Integer), 1008001(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1005007(Integer), 1036000(Integer), 1008009(Integer), 1036000(Integer), 1005007(Integer), 1036000(Integer), 1008009(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1020003(Integer), 1008002(Integer), 1008008(Integer), 1008009(Integer), 1008009(Integer), 1008008(Integer), 1008008(Integer), 1005007(Integer), 1008002(Integer), 1012003(Integer), 1008002(Integer), 1008009(Integer), 1008015(Integer), 1012003(Integer), 1012003(Integer), 1008009(Integer), 1008002(Integer), 1005007(Integer), 1005007(Integer), 1005007(Integer), 1005007(Integer), 1008002(Integer), 1008002(Integer), 1012003(Integer), 1010002(Integer), 1008002(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1008008(Integer), 1008008(Integer), 1008016(Integer), 1008016(Integer), 1011004(Integer), 1011004(Integer), 1008008(Integer), 1008008(Integer), 1036000(Integer), 1008015(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1008002(Integer), 1008002(Integer), 1005007(Integer), 1010002(Integer), 1012003(Integer), 1008008(Integer), 1008008(Integer), 1008002(Integer), 1008002(Integer), 1011004(Integer), 1011004(Integer), 1008009(Integer), 1008009(Integer), 1012001(Integer), 1008016(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1012001(Integer), 1008009(Integer), 1012003(Integer), 1012003(Integer), 1008008(Integer), 1010002(Integer), 1010002(Integer), 1017000(Integer), 1017000(Integer), 1011004(Integer), 1011004(Integer), 1011004(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1015000(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1011004(Integer), 1011004(Integer), 1015000(Integer), 1011004(Integer), 1011004(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1017000(Integer), 1008015(Integer), 1008001(Integer), 1010002(Integer), 1010002(Integer), 1012001(Integer), 1012001(Integer), 1008008(Integer), 1008009(Integer), 1008002(Integer), 1036000(Integer), 1020003(Integer), 1020003(Integer), 1020003(Integer), 1008015(Integer), 1011004(Integer), 1011004(Integer), 1015000(Integer), 1015000(Integer), 1020003(Integer), 1020003(Integer), 1011004(Integer), 1011004(Integer), 1020003(Integer), 1008008(Integer), 1010002(Integer), 1010002(Integer), 1008009(Integer), 1008009(Integer), 1012003(Integer), 1036000(Integer), 1008002(Integer), 1008001(Integer), 1008001(Integer), 1008001(Integer), 1008001(Integer), 1008002(Integer), 1017000(Integer), 1017000(Integer), 1008002(Integer), 1008002(Integer), 1036000(Integer), 1036000(Integer), 1036000(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008015(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1008009(Integer), 1017000(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1010002(Integer), 1020003(Integer), 1020003(Integer), 1008002(Integer), 1008002(Integer), 1012003(Integer), 1036000(Integer), 1012001(Integer), 1008015(Integer), 1008015(Integer), 1008015(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008002(Integer), 1008009(Integer), 1008009(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1032000(Integer), 1012001(Integer), 1008009(Integer), 1032000(Integer), 1008009(Integer), 1008015(Integer), 1012001(Integer), 1005007(Integer), 1008008(Integer), L2(String), false(Boolean)
2020-01-03 11:37:28,410 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 16
2020-01-03 11:41:28,987 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:41:29,010 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:41:29,021 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:41:39,032 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_footprint WHERE (user_id = ? AND deleted = ?) 
2020-01-03 11:41:39,045 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:41:39,068 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:41:41,722 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:41:41,724 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:41:41,725 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:41:43,554 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, user_id, province, city, county, address_detail, area_code, postal_code, tel, is_default, add_time, update_time, deleted from litemall_address WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:41:43,556 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:41:43,561 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:41:44,735 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:41:44,737 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:41:44,738 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:41:46,340 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (user_id = ? AND order_status IN (?) AND deleted = ?) 
2020-01-03 11:41:46,343 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 101(Short), false(Boolean)
2020-01-03 11:41:46,345 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:41:48,968 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (user_id = ? AND order_status IN (?) AND deleted = ?) 
2020-01-03 11:41:48,969 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 201(Short), false(Boolean)
2020-01-03 11:41:48,970 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:41:54,485 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (user_id = ? AND order_status IN (?) AND deleted = ?) 
2020-01-03 11:41:54,486 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 301(Short), false(Boolean)
2020-01-03 11:41:54,487 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:41:55,714 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM litemall_order WHERE (user_id = ? AND order_status IN (?) AND deleted = ?) 
2020-01-03 11:41:55,714 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 401(Short), false(Boolean)
2020-01-03 11:41:55,715 DEBUG [http-nio-8080-exec-5] o.l.l.d.d.L.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:41:57,080 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select order_status , comments from litemall_order WHERE ( user_id = ? and deleted = ? ) 
2020-01-03 11:41:57,081 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), false(Boolean)
2020-01-03 11:41:57,082 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:43:01,010 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:01,008 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:01,012 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:01,012 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:01,019 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:01,019 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:01,022 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:01,022 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:01,023 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:01,023 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:01,025 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:01,025 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:01,029 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:01,031 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:01,033 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:01,035 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:01,036 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:01,036 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:01,037 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:01,037 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:01,038 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:01,041 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:01,042 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:01,044 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:01,044 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,046 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 11:43:01,047 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:43:01,048 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:43:01,051 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:43:01,053 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,054 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:43:01,054 DEBUG [http-nio-8080-exec-9] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:43:01,056 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:43:01,058 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,059 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:43:01,062 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:43:01,064 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,065 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:43:01,067 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:43:01,069 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,070 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:43:01,073 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:43:01,076 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,077 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:43:01,080 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:43:01,082 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,083 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:43:01,085 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:43:01,088 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,089 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:43:01,092 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:43:01,095 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,096 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:43:01,099 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:43:01,101 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:01,102 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:43:01,105 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:43:50,985 ERROR [http-nio-8080-exec-8] o.l.l.c.c.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] Maximum upload size exceeded; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field file exceeds its maximum permitted size of 1048576 bytes.
org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field file exceeds its maximum permitted size of 1048576 bytes.
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.handleParseFailure(StandardMultipartHttpServletRequest.java:121)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:114)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:87)
	at org.springframework.web.multipart.support.StandardServletMultipartResolver.resolveMultipart(StandardServletMultipartResolver.java:87)
	at org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1176)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1011)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field file exceeds its maximum permitted size of 1048576 bytes.
	at org.apache.catalina.connector.Request.parseParts(Request.java:2899)
	at org.apache.catalina.connector.Request.parseParameters(Request.java:3194)
	at org.apache.catalina.connector.Request.getParameter(Request.java:1116)
	at org.apache.catalina.connector.RequestFacade.getParameter(RequestFacade.java:381)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:84)
	... 23 common frames omitted
Caused by: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field file exceeds its maximum permitted size of 1048576 bytes.
	at org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1.raiseError(FileUploadBase.java:633)
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.checkLimit(LimitedInputStream.java:76)
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read(LimitedInputStream.java:135)
	at java.io.FilterInputStream.read(FilterInputStream.java:107)
	at org.apache.tomcat.util.http.fileupload.util.Streams.copy(Streams.java:98)
	at org.apache.tomcat.util.http.fileupload.util.Streams.copy(Streams.java:68)
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:293)
	at org.apache.catalina.connector.Request.parseParts(Request.java:2855)
	... 27 common frames omitted
2020-01-03 11:43:59,452 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:59,453 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:59,456 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,459 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:59,460 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:59,462 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,466 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:59,467 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:59,469 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,471 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:59,472 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:59,474 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,487 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_category ( `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 11:43:59,499 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: 测试(String), a(String), dd(String), 0(Integer), (String), (String), L1(String), 2020-01-03 11:43:59.478(Timestamp), 2020-01-03 11:43:59.479(Timestamp)
2020-01-03 11:43:59,509 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:43:59,510 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 11:43:59,512 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 11:43:59,515 DEBUG [http-nio-8080-exec-1] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,555 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:59,555 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:59,555 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:59,555 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:59,557 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,557 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,558 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:59,558 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:59,559 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:59,559 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:59,560 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,562 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,563 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:59,564 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:59,565 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:43:59,566 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,566 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:43:59,568 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,568 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:59,569 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:59,569 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:43:59,570 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:43:59,570 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,571 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:43:59,572 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,573 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 11:43:59,573 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:43:59,575 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:43:59,575 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:43:59,577 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:43:59,577 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,578 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:43:59,581 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:43:59,582 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,583 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:43:59,586 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:43:59,587 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,588 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:43:59,590 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:43:59,593 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,595 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:43:59,597 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:43:59,599 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,600 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:43:59,602 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:43:59,604 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,605 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:43:59,607 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:43:59,609 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,609 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:43:59,612 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:43:59,614 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,615 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:43:59,618 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:43:59,620 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,620 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:43:59,622 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:43:59,624 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:43:59,625 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1036007(Integer), false(Boolean)
2020-01-03 11:43:59,626 DEBUG [http-nio-8080-exec-4] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:44:06,282 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:44:06,283 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:44:06,284 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,286 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:44:06,287 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:44:06,288 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,291 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:44:06,291 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:44:06,292 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,293 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:44:06,294 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:44:06,295 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,297 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.logicalDeleteByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_category set deleted = 1 where id = ? 
2020-01-03 11:44:06,300 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.logicalDeleteByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 1036007(Integer)
2020-01-03 11:44:06,305 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.logicalDeleteByPrimaryKey [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:44:06,333 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:44:06,333 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:44:06,334 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:44:06,334 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:44:06,336 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,336 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,337 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:44:06,337 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:44:06,337 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:44:06,337 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:44:06,339 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,339 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,341 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:44:06,341 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:44:06,342 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:44:06,342 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:44:06,343 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,343 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,345 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:44:06,345 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:44:06,346 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:44:06,346 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:44:06,347 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,347 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:44:06,349 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:44:06,349 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,350 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:44:06,350 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 11:44:06,352 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:44:06,354 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:44:06,355 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,356 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:44:06,359 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:44:06,361 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,362 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:44:06,364 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:44:06,367 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,368 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:44:06,370 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:44:06,373 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,374 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:44:06,376 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:44:06,378 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,379 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:44:06,382 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:44:06,384 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,385 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:44:06,387 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:44:06,390 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,390 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:44:06,392 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:44:06,393 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,393 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:44:06,395 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:44:06,397 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:44:06,398 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:44:06,400 DEBUG [http-nio-8080-exec-2] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:46:39,806 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:46:39,847 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:46:39,863 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,870 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:46:39,871 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:46:39,873 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,888 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:46:39,890 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:46:39,891 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,893 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:46:39,893 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:46:39,894 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,904 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into litemall_category ( `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-01-03 11:46:39,912 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: 测试(String), (String), (String), 0(Integer), (String), (String), L1(String), 2020-01-03 11:46:39.899(Timestamp), 2020-01-03 11:46:39.901(Timestamp)
2020-01-03 11:46:39,934 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:46:39,935 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-01-03 11:46:39,936 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-01-03 11:46:39,939 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,985 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:46:39,986 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:46:39,987 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:46:39,988 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,988 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:46:39,989 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:46:39,990 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,990 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:46:39,992 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,992 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:46:39,994 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:46:39,996 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,996 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:46:39,997 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:46:39,998 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:39,998 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:46:39,999 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:46:40,000 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:46:40,000 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:40,001 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:46:40,005 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:46:40,005 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:40,005 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:46:40,007 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:40,010 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,012 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 11:46:40,015 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:46:40,015 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:46:40,017 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:46:40,018 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,018 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:46:40,019 DEBUG [http-nio-8080-exec-8] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:46:40,021 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:46:40,023 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,024 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:46:40,026 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:46:40,028 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,029 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:46:40,032 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:46:40,034 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,035 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:46:40,037 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:46:40,039 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,039 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:46:40,042 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:46:40,044 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,045 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:46:40,047 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:46:40,050 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,050 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:46:40,052 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:46:40,055 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,056 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:46:40,058 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:46:40,060 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,061 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:46:40,064 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:46:40,066 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:46:40,067 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1036008(Integer), false(Boolean)
2020-01-03 11:46:40,070 DEBUG [http-nio-8080-exec-10] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-01-03 11:46:59,951 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:46:59,953 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:46:59,956 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:59,960 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:46:59,961 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:46:59,963 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:59,966 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:46:59,967 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:46:59,969 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:59,971 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:46:59,973 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:46:59,974 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:46:59,976 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.logicalDeleteByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: update litemall_category set deleted = 1 where id = ? 
2020-01-03 11:46:59,987 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.logicalDeleteByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 1036008(Integer)
2020-01-03 11:47:00,003 DEBUG [http-nio-8080-exec-7] o.l.l.d.d.L.logicalDeleteByPrimaryKey [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-01-03 11:47:00,077 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:47:00,079 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:47:00,080 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:47:00,082 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:47:00,083 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:47:00,085 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:47:00,088 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:47:00,089 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:47:00,090 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:47:00,093 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:47:00,093 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:47:00,095 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:47:00,098 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,099 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), false(Boolean)
2020-01-03 11:47:00,103 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:47:00,106 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,107 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005000(Integer), false(Boolean)
2020-01-03 11:47:00,110 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:47:00,112 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,113 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005001(Integer), false(Boolean)
2020-01-03 11:47:00,115 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:47:00,126 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,128 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1005002(Integer), false(Boolean)
2020-01-03 11:47:00,124 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:47:00,132 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:47:00,129 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:47:00,136 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:47:00,146 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:47:00,148 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:47:00,149 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:47:00,167 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from litemall_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-01-03 11:47:00,168 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-01-03 11:47:00,173 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:47:00,159 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,186 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from litemall_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-01-03 11:47:00,187 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-01-03 11:47:00,189 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-01-03 11:47:00,187 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1008000(Integer), false(Boolean)
2020-01-03 11:47:00,203 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:47:00,214 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,214 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1010000(Integer), false(Boolean)
2020-01-03 11:47:00,230 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
2020-01-03 11:47:00,233 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,234 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1011000(Integer), false(Boolean)
2020-01-03 11:47:00,237 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:47:00,241 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,242 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1012000(Integer), false(Boolean)
2020-01-03 11:47:00,247 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 10
2020-01-03 11:47:00,250 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,251 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1013001(Integer), false(Boolean)
2020-01-03 11:47:00,254 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 7
2020-01-03 11:47:00,238 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( `level` = ? and deleted = ? ) 
2020-01-03 11:47:00,257 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: L1(String), false(Boolean)
2020-01-03 11:47:00,258 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time, update_time, deleted from litemall_category WHERE ( pid = ? and deleted = ? ) 
2020-01-03 11:47:00,264 DEBUG [http-nio-8080-exec-6] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 9
2020-01-03 11:47:00,261 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1019000(Integer), false(Boolean)
2020-01-03 11:47:00,284 DEBUG [http-nio-8080-exec-3] o.l.l.d.d.L.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 11
